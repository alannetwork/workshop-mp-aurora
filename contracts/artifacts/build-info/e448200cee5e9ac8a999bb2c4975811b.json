{
	"id": "e448200cee5e9ac8a999bb2c4975811b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/3_TokenSwap.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n// CODE NOT AUDITED\n// USE ONLY FOR EDUCATIONAL PURPOSE\n\ncontract TokenSwap {\n    address public tokenA;          // Address of token A\n    address public tokenB;          // Address of token B\n    uint256 public exchangeRate;    // Exchange rate between token A and token B\n\n    constructor(address _tokenA, address _tokenB, uint256 _exchangeRate) {\n        tokenA = _tokenA;\n        tokenB = _tokenB;\n        exchangeRate = _exchangeRate;\n    }\n\n    function swapTokens(uint256 _amount) external {\n\n        // Approve the contract to spend the token amount on behalf of the swapper\n        IERC20(tokenA).approve(address(this), _amount);\n\n        // Perform token transfer from the sender to the contract\n        IERC20(tokenA).transferFrom(msg.sender, address(this), _amount);  // Transfer `_amount` tokens from the sender to the contract\n\n        uint256 swappedAmount = _amount * exchangeRate;\n\n        // Perform token transfer from the contract to the sender\n        IERC20(tokenB).transfer(msg.sender, swappedAmount);  // Transfer `swappedAmount` tokens from the contract to the sender\n\n        // Emit an event to indicate a successful token swap\n        emit TokensSwapped(msg.sender, _amount, swappedAmount);\n    }\n\n    event TokensSwapped(address indexed sender, uint256 amount, uint256 swappedAmount);\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/3_TokenSwap.sol": {
				"TokenSwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_exchangeRate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "swappedAmount",
									"type": "uint256"
								}
							],
							"name": "TokensSwapped",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "exchangeRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "swapTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenA",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenB",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/3_TokenSwap.sol\":171:1430  contract TokenSwap {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/3_TokenSwap.sol\":394:560  constructor(address _tokenA, address _tokenB, uint256 _exchangeRate) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/3_TokenSwap.sol\":482:489  _tokenA */\n  dup3\n    /* \"contracts/3_TokenSwap.sol\":473:479  tokenA */\n  0x00\n  dup1\n    /* \"contracts/3_TokenSwap.sol\":473:489  tokenA = _tokenA */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/3_TokenSwap.sol\":508:515  _tokenB */\n  dup2\n    /* \"contracts/3_TokenSwap.sol\":499:505  tokenB */\n  0x01\n  0x00\n    /* \"contracts/3_TokenSwap.sol\":499:515  tokenB = _tokenB */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/3_TokenSwap.sol\":540:553  _exchangeRate */\n  dup1\n    /* \"contracts/3_TokenSwap.sol\":525:537  exchangeRate */\n  0x02\n    /* \"contracts/3_TokenSwap.sol\":525:553  exchangeRate = _exchangeRate */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/3_TokenSwap.sol\":394:560  constructor(address _tokenA, address _tokenB, uint256 _exchangeRate) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/3_TokenSwap.sol\":171:1430  contract TokenSwap {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_23\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_25\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_26:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_28\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_14:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_15:\n    /* \"#utility.yul\":1001:1025   */\n  tag_31\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_14\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_32:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_16:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_34\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_15\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1868   */\ntag_3:\n    /* \"#utility.yul\":1293:1299   */\n  0x00\n    /* \"#utility.yul\":1301:1307   */\n  dup1\n    /* \"#utility.yul\":1309:1315   */\n  0x00\n    /* \"#utility.yul\":1358:1360   */\n  0x60\n    /* \"#utility.yul\":1346:1355   */\n  dup5\n    /* \"#utility.yul\":1337:1344   */\n  dup7\n    /* \"#utility.yul\":1333:1356   */\n  sub\n    /* \"#utility.yul\":1329:1361   */\n  slt\n    /* \"#utility.yul\":1326:1445   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1364:1443   */\n  tag_37\n  tag_8\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1326:1445   */\ntag_36:\n    /* \"#utility.yul\":1484:1485   */\n  0x00\n    /* \"#utility.yul\":1509:1573   */\n  tag_38\n    /* \"#utility.yul\":1565:1572   */\n  dup7\n    /* \"#utility.yul\":1556:1562   */\n  dup3\n    /* \"#utility.yul\":1545:1554   */\n  dup8\n    /* \"#utility.yul\":1541:1563   */\n  add\n    /* \"#utility.yul\":1509:1573   */\n  tag_13\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1499:1573   */\n  swap4\n  pop\n    /* \"#utility.yul\":1455:1583   */\n  pop\n    /* \"#utility.yul\":1622:1624   */\n  0x20\n    /* \"#utility.yul\":1648:1712   */\n  tag_39\n    /* \"#utility.yul\":1704:1711   */\n  dup7\n    /* \"#utility.yul\":1695:1701   */\n  dup3\n    /* \"#utility.yul\":1684:1693   */\n  dup8\n    /* \"#utility.yul\":1680:1702   */\n  add\n    /* \"#utility.yul\":1648:1712   */\n  tag_13\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1638:1712   */\n  swap3\n  pop\n    /* \"#utility.yul\":1593:1722   */\n  pop\n    /* \"#utility.yul\":1761:1763   */\n  0x40\n    /* \"#utility.yul\":1787:1851   */\n  tag_40\n    /* \"#utility.yul\":1843:1850   */\n  dup7\n    /* \"#utility.yul\":1834:1840   */\n  dup3\n    /* \"#utility.yul\":1823:1832   */\n  dup8\n    /* \"#utility.yul\":1819:1841   */\n  add\n    /* \"#utility.yul\":1787:1851   */\n  tag_16\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1777:1851   */\n  swap2\n  pop\n    /* \"#utility.yul\":1732:1861   */\n  pop\n    /* \"#utility.yul\":1205:1868   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"contracts/3_TokenSwap.sol\":171:1430  contract TokenSwap {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/3_TokenSwap.sol\":171:1430  contract TokenSwap {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0fc63d10\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3ba0b9a9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5f64b55b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xfe784eaa\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/3_TokenSwap.sol\":196:217  address public tokenA */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3_TokenSwap.sol\":312:339  uint256 public exchangeRate */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3_TokenSwap.sol\":254:275  address public tokenB */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3_TokenSwap.sol\":566:1339  function swapTokens(uint256 _amount) external {... */\n    tag_6:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"contracts/3_TokenSwap.sol\":196:217  address public tokenA */\n    tag_8:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/3_TokenSwap.sol\":312:339  uint256 public exchangeRate */\n    tag_12:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/3_TokenSwap.sol\":254:275  address public tokenB */\n    tag_16:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/3_TokenSwap.sol\":566:1339  function swapTokens(uint256 _amount) external {... */\n    tag_21:\n        /* \"contracts/3_TokenSwap.sol\":713:719  tokenA */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/3_TokenSwap.sol\":706:728  IERC20(tokenA).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"contracts/3_TokenSwap.sol\":737:741  this */\n      address\n        /* \"contracts/3_TokenSwap.sol\":744:751  _amount */\n      dup4\n        /* \"contracts/3_TokenSwap.sol\":706:752  IERC20(tokenA).approve(address(this), _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_23\n      swap3\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_26\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_26:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      pop\n        /* \"contracts/3_TokenSwap.sol\":836:842  tokenA */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/3_TokenSwap.sol\":829:856  IERC20(tokenA).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/3_TokenSwap.sol\":857:867  msg.sender */\n      caller\n        /* \"contracts/3_TokenSwap.sol\":877:881  this */\n      address\n        /* \"contracts/3_TokenSwap.sol\":884:891  _amount */\n      dup5\n        /* \"contracts/3_TokenSwap.sol\":829:892  IERC20(tokenA).transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_29\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_32\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_32:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_33:\n      pop\n        /* \"contracts/3_TokenSwap.sol\":965:986  uint256 swappedAmount */\n      0x00\n        /* \"contracts/3_TokenSwap.sol\":999:1011  exchangeRate */\n      sload(0x02)\n        /* \"contracts/3_TokenSwap.sol\":989:996  _amount */\n      dup3\n        /* \"contracts/3_TokenSwap.sol\":989:1011  _amount * exchangeRate */\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"contracts/3_TokenSwap.sol\":965:1011  uint256 swappedAmount = _amount * exchangeRate */\n      swap1\n      pop\n        /* \"contracts/3_TokenSwap.sol\":1095:1101  tokenB */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/3_TokenSwap.sol\":1088:1111  IERC20(tokenB).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/3_TokenSwap.sol\":1112:1122  msg.sender */\n      caller\n        /* \"contracts/3_TokenSwap.sol\":1124:1137  swappedAmount */\n      dup4\n        /* \"contracts/3_TokenSwap.sol\":1088:1138  IERC20(tokenB).transfer(msg.sender, swappedAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_36\n      swap3\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_36:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_38\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_38:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_39:\n      pop\n        /* \"contracts/3_TokenSwap.sol\":1297:1307  msg.sender */\n      caller\n        /* \"contracts/3_TokenSwap.sol\":1283:1332  TokensSwapped(msg.sender, _amount, swappedAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18704ae982dcd24a1beeeed3ecf045ab0520d7b7519b97adf3e4f40bf7efe339\n        /* \"contracts/3_TokenSwap.sol\":1309:1316  _amount */\n      dup4\n        /* \"contracts/3_TokenSwap.sol\":1318:1331  swappedAmount */\n      dup4\n        /* \"contracts/3_TokenSwap.sol\":1283:1332  TokensSwapped(msg.sender, _amount, swappedAmount) */\n      mload(0x40)\n      tag_40\n      swap3\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/3_TokenSwap.sol\":612:1339  {... */\n      pop\n        /* \"contracts/3_TokenSwap.sol\":566:1339  function swapTokens(uint256 _amount) external {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_42:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_43:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_59\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_42\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_44:\n        /* \"#utility.yul\":328:352   */\n      tag_61\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_43\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_10:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_63\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_44\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:670   */\n    tag_45:\n        /* \"#utility.yul\":630:637   */\n      0x00\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":648:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_46:\n        /* \"#utility.yul\":763:787   */\n      tag_66\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_45\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_14:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_68\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_46\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1109:1226   */\n    tag_48:\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1215:1216   */\n      dup1\n        /* \"#utility.yul\":1208:1220   */\n      revert\n        /* \"#utility.yul\":1355:1477   */\n    tag_50:\n        /* \"#utility.yul\":1428:1452   */\n      tag_73\n        /* \"#utility.yul\":1446:1451   */\n      dup2\n        /* \"#utility.yul\":1428:1452   */\n      tag_45\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1421:1426   */\n      dup2\n        /* \"#utility.yul\":1418:1453   */\n      eq\n        /* \"#utility.yul\":1408:1471   */\n      tag_74\n      jumpi\n        /* \"#utility.yul\":1467:1468   */\n      0x00\n        /* \"#utility.yul\":1464:1465   */\n      dup1\n        /* \"#utility.yul\":1457:1469   */\n      revert\n        /* \"#utility.yul\":1408:1471   */\n    tag_74:\n        /* \"#utility.yul\":1355:1477   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1483:1622   */\n    tag_51:\n        /* \"#utility.yul\":1529:1534   */\n      0x00\n        /* \"#utility.yul\":1567:1573   */\n      dup2\n        /* \"#utility.yul\":1554:1574   */\n      calldataload\n        /* \"#utility.yul\":1545:1574   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1616   */\n      tag_76\n        /* \"#utility.yul\":1610:1615   */\n      dup2\n        /* \"#utility.yul\":1583:1616   */\n      tag_50\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1483:1622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1628:1957   */\n    tag_20:\n        /* \"#utility.yul\":1687:1693   */\n      0x00\n        /* \"#utility.yul\":1736:1738   */\n      0x20\n        /* \"#utility.yul\":1724:1733   */\n      dup3\n        /* \"#utility.yul\":1715:1722   */\n      dup5\n        /* \"#utility.yul\":1711:1734   */\n      sub\n        /* \"#utility.yul\":1707:1739   */\n      slt\n        /* \"#utility.yul\":1704:1823   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":1742:1821   */\n      tag_79\n      tag_48\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1704:1823   */\n    tag_78:\n        /* \"#utility.yul\":1862:1863   */\n      0x00\n        /* \"#utility.yul\":1887:1940   */\n      tag_80\n        /* \"#utility.yul\":1932:1939   */\n      dup5\n        /* \"#utility.yul\":1923:1929   */\n      dup3\n        /* \"#utility.yul\":1912:1921   */\n      dup6\n        /* \"#utility.yul\":1908:1930   */\n      add\n        /* \"#utility.yul\":1887:1940   */\n      tag_51\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":1877:1940   */\n      swap2\n      pop\n        /* \"#utility.yul\":1833:1950   */\n      pop\n        /* \"#utility.yul\":1628:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2295   */\n    tag_24:\n        /* \"#utility.yul\":2084:2088   */\n      0x00\n        /* \"#utility.yul\":2122:2124   */\n      0x40\n        /* \"#utility.yul\":2111:2120   */\n      dup3\n        /* \"#utility.yul\":2107:2125   */\n      add\n        /* \"#utility.yul\":2099:2125   */\n      swap1\n      pop\n        /* \"#utility.yul\":2135:2206   */\n      tag_82\n        /* \"#utility.yul\":2203:2204   */\n      0x00\n        /* \"#utility.yul\":2192:2201   */\n      dup4\n        /* \"#utility.yul\":2188:2205   */\n      add\n        /* \"#utility.yul\":2179:2185   */\n      dup6\n        /* \"#utility.yul\":2135:2206   */\n      tag_44\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2216:2288   */\n      tag_83\n        /* \"#utility.yul\":2284:2286   */\n      0x20\n        /* \"#utility.yul\":2273:2282   */\n      dup4\n        /* \"#utility.yul\":2269:2287   */\n      add\n        /* \"#utility.yul\":2260:2266   */\n      dup5\n        /* \"#utility.yul\":2216:2288   */\n      tag_46\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1963:2295   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2301:2391   */\n    tag_52:\n        /* \"#utility.yul\":2335:2342   */\n      0x00\n        /* \"#utility.yul\":2378:2383   */\n      dup2\n        /* \"#utility.yul\":2371:2384   */\n      iszero\n        /* \"#utility.yul\":2364:2385   */\n      iszero\n        /* \"#utility.yul\":2353:2385   */\n      swap1\n      pop\n        /* \"#utility.yul\":2301:2391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2397:2513   */\n    tag_53:\n        /* \"#utility.yul\":2467:2488   */\n      tag_86\n        /* \"#utility.yul\":2482:2487   */\n      dup2\n        /* \"#utility.yul\":2467:2488   */\n      tag_52\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":2460:2465   */\n      dup2\n        /* \"#utility.yul\":2457:2489   */\n      eq\n        /* \"#utility.yul\":2447:2507   */\n      tag_87\n      jumpi\n        /* \"#utility.yul\":2503:2504   */\n      0x00\n        /* \"#utility.yul\":2500:2501   */\n      dup1\n        /* \"#utility.yul\":2493:2505   */\n      revert\n        /* \"#utility.yul\":2447:2507   */\n    tag_87:\n        /* \"#utility.yul\":2397:2513   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2519:2656   */\n    tag_54:\n        /* \"#utility.yul\":2573:2578   */\n      0x00\n        /* \"#utility.yul\":2604:2610   */\n      dup2\n        /* \"#utility.yul\":2598:2611   */\n      mload\n        /* \"#utility.yul\":2589:2611   */\n      swap1\n      pop\n        /* \"#utility.yul\":2620:2650   */\n      tag_89\n        /* \"#utility.yul\":2644:2649   */\n      dup2\n        /* \"#utility.yul\":2620:2650   */\n      tag_53\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":2519:2656   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2662:3007   */\n    tag_28:\n        /* \"#utility.yul\":2729:2735   */\n      0x00\n        /* \"#utility.yul\":2778:2780   */\n      0x20\n        /* \"#utility.yul\":2766:2775   */\n      dup3\n        /* \"#utility.yul\":2757:2764   */\n      dup5\n        /* \"#utility.yul\":2753:2776   */\n      sub\n        /* \"#utility.yul\":2749:2781   */\n      slt\n        /* \"#utility.yul\":2746:2865   */\n      iszero\n      tag_91\n      jumpi\n        /* \"#utility.yul\":2784:2863   */\n      tag_92\n      tag_48\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2746:2865   */\n    tag_91:\n        /* \"#utility.yul\":2904:2905   */\n      0x00\n        /* \"#utility.yul\":2929:2990   */\n      tag_93\n        /* \"#utility.yul\":2982:2989   */\n      dup5\n        /* \"#utility.yul\":2973:2979   */\n      dup3\n        /* \"#utility.yul\":2962:2971   */\n      dup6\n        /* \"#utility.yul\":2958:2980   */\n      add\n        /* \"#utility.yul\":2929:2990   */\n      tag_54\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":2919:2990   */\n      swap2\n      pop\n        /* \"#utility.yul\":2875:3000   */\n      pop\n        /* \"#utility.yul\":2662:3007   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3013:3455   */\n    tag_30:\n        /* \"#utility.yul\":3162:3166   */\n      0x00\n        /* \"#utility.yul\":3200:3202   */\n      0x60\n        /* \"#utility.yul\":3189:3198   */\n      dup3\n        /* \"#utility.yul\":3185:3203   */\n      add\n        /* \"#utility.yul\":3177:3203   */\n      swap1\n      pop\n        /* \"#utility.yul\":3213:3284   */\n      tag_95\n        /* \"#utility.yul\":3281:3282   */\n      0x00\n        /* \"#utility.yul\":3270:3279   */\n      dup4\n        /* \"#utility.yul\":3266:3283   */\n      add\n        /* \"#utility.yul\":3257:3263   */\n      dup7\n        /* \"#utility.yul\":3213:3284   */\n      tag_44\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":3294:3366   */\n      tag_96\n        /* \"#utility.yul\":3362:3364   */\n      0x20\n        /* \"#utility.yul\":3351:3360   */\n      dup4\n        /* \"#utility.yul\":3347:3365   */\n      add\n        /* \"#utility.yul\":3338:3344   */\n      dup6\n        /* \"#utility.yul\":3294:3366   */\n      tag_44\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":3376:3448   */\n      tag_97\n        /* \"#utility.yul\":3444:3446   */\n      0x40\n        /* \"#utility.yul\":3433:3442   */\n      dup4\n        /* \"#utility.yul\":3429:3447   */\n      add\n        /* \"#utility.yul\":3420:3426   */\n      dup5\n        /* \"#utility.yul\":3376:3448   */\n      tag_46\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":3013:3455   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3461:3641   */\n    tag_55:\n        /* \"#utility.yul\":3509:3586   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3506:3507   */\n      0x00\n        /* \"#utility.yul\":3499:3587   */\n      mstore\n        /* \"#utility.yul\":3606:3610   */\n      0x11\n        /* \"#utility.yul\":3603:3604   */\n      0x04\n        /* \"#utility.yul\":3596:3611   */\n      mstore\n        /* \"#utility.yul\":3630:3634   */\n      0x24\n        /* \"#utility.yul\":3627:3628   */\n      0x00\n        /* \"#utility.yul\":3620:3635   */\n      revert\n        /* \"#utility.yul\":3647:4057   */\n    tag_35:\n        /* \"#utility.yul\":3687:3694   */\n      0x00\n        /* \"#utility.yul\":3710:3730   */\n      tag_100\n        /* \"#utility.yul\":3728:3729   */\n      dup3\n        /* \"#utility.yul\":3710:3730   */\n      tag_45\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":3705:3730   */\n      swap2\n      pop\n        /* \"#utility.yul\":3744:3764   */\n      tag_101\n        /* \"#utility.yul\":3762:3763   */\n      dup4\n        /* \"#utility.yul\":3744:3764   */\n      tag_45\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":3739:3764   */\n      swap3\n      pop\n        /* \"#utility.yul\":3799:3800   */\n      dup3\n        /* \"#utility.yul\":3796:3797   */\n      dup3\n        /* \"#utility.yul\":3792:3801   */\n      mul\n        /* \"#utility.yul\":3821:3851   */\n      tag_102\n        /* \"#utility.yul\":3839:3850   */\n      dup2\n        /* \"#utility.yul\":3821:3851   */\n      tag_45\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":3810:3851   */\n      swap2\n      pop\n        /* \"#utility.yul\":4000:4001   */\n      dup3\n        /* \"#utility.yul\":3991:3998   */\n      dup3\n        /* \"#utility.yul\":3987:4002   */\n      div\n        /* \"#utility.yul\":3984:3985   */\n      dup5\n        /* \"#utility.yul\":3981:4003   */\n      eq\n        /* \"#utility.yul\":3961:3962   */\n      dup4\n        /* \"#utility.yul\":3954:3963   */\n      iszero\n        /* \"#utility.yul\":3934:4017   */\n      or\n        /* \"#utility.yul\":3911:4050   */\n      tag_103\n      jumpi\n        /* \"#utility.yul\":4030:4048   */\n      tag_104\n      tag_55\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":3911:4050   */\n    tag_103:\n        /* \"#utility.yul\":3695:4057   */\n      pop\n        /* \"#utility.yul\":3647:4057   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4063:4395   */\n    tag_41:\n        /* \"#utility.yul\":4184:4188   */\n      0x00\n        /* \"#utility.yul\":4222:4224   */\n      0x40\n        /* \"#utility.yul\":4211:4220   */\n      dup3\n        /* \"#utility.yul\":4207:4225   */\n      add\n        /* \"#utility.yul\":4199:4225   */\n      swap1\n      pop\n        /* \"#utility.yul\":4235:4306   */\n      tag_106\n        /* \"#utility.yul\":4303:4304   */\n      0x00\n        /* \"#utility.yul\":4292:4301   */\n      dup4\n        /* \"#utility.yul\":4288:4305   */\n      add\n        /* \"#utility.yul\":4279:4285   */\n      dup6\n        /* \"#utility.yul\":4235:4306   */\n      tag_46\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":4316:4388   */\n      tag_107\n        /* \"#utility.yul\":4384:4386   */\n      0x20\n        /* \"#utility.yul\":4373:4382   */\n      dup4\n        /* \"#utility.yul\":4369:4387   */\n      add\n        /* \"#utility.yul\":4360:4366   */\n      dup5\n        /* \"#utility.yul\":4316:4388   */\n      tag_46\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":4063:4395   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ed3d125381a2f6e1b056dc2f32fd625034bbd007b4cda92a5b8f0e8e615c4d2d64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_108": {
									"entryPoint": null,
									"id": 108,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256_fromMemory": {
									"entryPoint": 347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 194,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1871:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:2",
														"type": ""
													}
												],
												"src": "696:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "890:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "900:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "911:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "872:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "882:7:2",
														"type": ""
													}
												],
												"src": "845:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "971:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1028:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:43:2"
															},
															"nodeType": "YulIf",
															"src": "981:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "964:5:2",
														"type": ""
													}
												],
												"src": "928:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1119:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1129:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1097:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1105:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1113:5:2",
														"type": ""
													}
												],
												"src": "1056:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1316:552:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1364:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1337:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1333:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1329:32:2"
															},
															"nodeType": "YulIf",
															"src": "1326:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1455:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1470:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1474:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1499:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1545:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1556:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1541:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1509:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1509:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1499:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1593:129:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1608:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1612:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1638:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1684:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1695:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1680:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1680:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1704:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1648:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1648:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1638:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1732:129:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1747:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1751:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1777:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1787:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1787:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1270:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1281:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1293:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1301:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1309:6:2",
														"type": ""
													}
												],
												"src": "1205:663:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161079e38038061079e8339818101604052810190610032919061015b565b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806002819055505050506101ae565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100f2826100c7565b9050919050565b610102816100e7565b811461010d57600080fd5b50565b60008151905061011f816100f9565b92915050565b6000819050919050565b61013881610125565b811461014357600080fd5b50565b6000815190506101558161012f565b92915050565b600080600060608486031215610174576101736100c2565b5b600061018286828701610110565b935050602061019386828701610110565b92505060406101a486828701610146565b9150509250925092565b6105e1806101bd6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630fc63d10146100515780633ba0b9a91461006f5780635f64b55b1461008d578063fe784eaa146100ab575b600080fd5b6100596100c7565b604051610066919061039f565b60405180910390f35b6100776100eb565b60405161008491906103d3565b60405180910390f35b6100956100f1565b6040516100a2919061039f565b60405180910390f35b6100c560048036038101906100c0919061041f565b610117565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b815260040161017292919061044c565b6020604051808303816000875af1158015610191573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b591906104ad565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610213939291906104da565b6020604051808303816000875af1158015610232573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025691906104ad565b506000600254826102679190610540565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016102c692919061044c565b6020604051808303816000875af11580156102e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030991906104ad565b503373ffffffffffffffffffffffffffffffffffffffff167f18704ae982dcd24a1beeeed3ecf045ab0520d7b7519b97adf3e4f40bf7efe3398383604051610352929190610582565b60405180910390a25050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103898261035e565b9050919050565b6103998161037e565b82525050565b60006020820190506103b46000830184610390565b92915050565b6000819050919050565b6103cd816103ba565b82525050565b60006020820190506103e860008301846103c4565b92915050565b600080fd5b6103fc816103ba565b811461040757600080fd5b50565b600081359050610419816103f3565b92915050565b600060208284031215610435576104346103ee565b5b60006104438482850161040a565b91505092915050565b60006040820190506104616000830185610390565b61046e60208301846103c4565b9392505050565b60008115159050919050565b61048a81610475565b811461049557600080fd5b50565b6000815190506104a781610481565b92915050565b6000602082840312156104c3576104c26103ee565b5b60006104d184828501610498565b91505092915050565b60006060820190506104ef6000830186610390565b6104fc6020830185610390565b61050960408301846103c4565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061054b826103ba565b9150610556836103ba565b9250828202610564816103ba565b9150828204841483151761057b5761057a610511565b5b5092915050565b600060408201905061059760008301856103c4565b6105a460208301846103c4565b939250505056fea2646970667358221220ed3d125381a2f6e1b056dc2f32fd625034bbd007b4cda92a5b8f0e8e615c4d2d64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x79E CODESIZE SUB DUP1 PUSH2 0x79E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x15B JUMP JUMPDEST DUP3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x1AE JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF2 DUP3 PUSH2 0xC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x102 DUP2 PUSH2 0xE7 JUMP JUMPDEST DUP2 EQ PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x11F DUP2 PUSH2 0xF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x138 DUP2 PUSH2 0x125 JUMP JUMPDEST DUP2 EQ PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x155 DUP2 PUSH2 0x12F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x174 JUMPI PUSH2 0x173 PUSH2 0xC2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x182 DUP7 DUP3 DUP8 ADD PUSH2 0x110 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x193 DUP7 DUP3 DUP8 ADD PUSH2 0x110 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A4 DUP7 DUP3 DUP8 ADD PUSH2 0x146 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x5E1 DUP1 PUSH2 0x1BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xFC63D10 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x3BA0B9A9 EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x5F64B55B EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0xFE784EAA EQ PUSH2 0xAB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0xEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x3D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x41F JUMP JUMPDEST PUSH2 0x117 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172 SWAP3 SWAP2 SWAP1 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x191 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x4AD JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x232 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x4AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x540 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C6 SWAP3 SWAP2 SWAP1 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x4AD JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x18704AE982DCD24A1BEEEED3ECF045AB0520D7B7519B97ADF3E4F40BF7EFE339 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x352 SWAP3 SWAP2 SWAP1 PUSH2 0x582 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x389 DUP3 PUSH2 0x35E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x399 DUP2 PUSH2 0x37E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3B4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x390 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CD DUP2 PUSH2 0x3BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3FC DUP2 PUSH2 0x3BA JUMP JUMPDEST DUP2 EQ PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x419 DUP2 PUSH2 0x3F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x435 JUMPI PUSH2 0x434 PUSH2 0x3EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x443 DUP5 DUP3 DUP6 ADD PUSH2 0x40A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x461 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x390 JUMP JUMPDEST PUSH2 0x46E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x48A DUP2 PUSH2 0x475 JUMP JUMPDEST DUP2 EQ PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4A7 DUP2 PUSH2 0x481 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C3 JUMPI PUSH2 0x4C2 PUSH2 0x3EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4D1 DUP5 DUP3 DUP6 ADD PUSH2 0x498 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4EF PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x390 JUMP JUMPDEST PUSH2 0x4FC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x390 JUMP JUMPDEST PUSH2 0x509 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3C4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x54B DUP3 PUSH2 0x3BA JUMP JUMPDEST SWAP2 POP PUSH2 0x556 DUP4 PUSH2 0x3BA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x564 DUP2 PUSH2 0x3BA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x57B JUMPI PUSH2 0x57A PUSH2 0x511 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x597 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x5A4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED RETURNDATASIZE SLT MSTORE8 DUP2 LOG2 0xF6 0xE1 0xB0 JUMP 0xDC 0x2F ORIGIN REVERT PUSH3 0x5034BB 0xD0 SMOD 0xB4 0xCD 0xA9 0x2A JUMPDEST DUP16 0xE DUP15 PUSH2 0x5C4D 0x2D PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "171:1259:1:-:0;;;394:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;482:7;473:6;;:16;;;;;;;;;;;;;;;;;;508:7;499:6;;:16;;;;;;;;;;;;;;;;;;540:13;525:12;:28;;;;394:166;;;171:1259;;88:117:2;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:663::-;1293:6;1301;1309;1358:2;1346:9;1337:7;1333:23;1329:32;1326:119;;;1364:79;;:::i;:::-;1326:119;1484:1;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1455:128;1622:2;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1593:129;1761:2;1787:64;1843:7;1834:6;1823:9;1819:22;1787:64;:::i;:::-;1777:74;;1732:129;1205:663;;;;;:::o;171:1259:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@exchangeRate_86": {
									"entryPoint": 235,
									"id": 86,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapTokens_160": {
									"entryPoint": 279,
									"id": 160,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tokenA_82": {
									"entryPoint": 199,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenB_84": {
									"entryPoint": 241,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1242,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1100,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 1410,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1297,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1006,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4398:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:2",
														"type": ""
													}
												],
												"src": "139:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:2",
														"type": ""
													}
												],
												"src": "241:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:2",
														"type": ""
													}
												],
												"src": "365:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "638:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "648:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "659:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "620:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "630:7:2",
														"type": ""
													}
												],
												"src": "593:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "751:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "729:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "736:3:2",
														"type": ""
													}
												],
												"src": "676:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "898:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "908:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "931:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "916:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "944:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "870:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "882:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "893:4:2",
														"type": ""
													}
												],
												"src": "800:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1078:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1088:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1088:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1061:6:2",
														"type": ""
													}
												],
												"src": "1028:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1198:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1215:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1218:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1208:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1208:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1109:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1321:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1338:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1331:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1232:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1398:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1455:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1467:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1457:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1421:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1446:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1428:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1428:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1418:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1418:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1411:43:2"
															},
															"nodeType": "YulIf",
															"src": "1408:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1391:5:2",
														"type": ""
													}
												],
												"src": "1355:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1535:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1545:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1567:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1554:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1554:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1545:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1610:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1583:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1583:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1583:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1513:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1521:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1529:5:2",
														"type": ""
													}
												],
												"src": "1483:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1694:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1740:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1742:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1742:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1742:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1715:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1724:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1711:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1711:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1736:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1707:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1707:32:2"
															},
															"nodeType": "YulIf",
															"src": "1704:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1833:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1848:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1862:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1852:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1877:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1912:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1923:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1908:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1908:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1932:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1887:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1887:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1877:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1664:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1675:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1687:6:2",
														"type": ""
													}
												],
												"src": "1628:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2089:206:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2099:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2111:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2122:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2107:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2107:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2099:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2179:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2192:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2203:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2188:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2188:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2135:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2135:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2260:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2273:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2284:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2269:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2269:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2216:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2216:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2216:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2053:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2065:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2073:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2084:4:2",
														"type": ""
													}
												],
												"src": "1963:332:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2343:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2353:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2378:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2371:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2371:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2364:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2364:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2353:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2325:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2335:7:2",
														"type": ""
													}
												],
												"src": "2301:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2437:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2491:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2500:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2503:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2493:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2493:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2493:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2460:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2482:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2467:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2467:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2457:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2457:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2450:40:2"
															},
															"nodeType": "YulIf",
															"src": "2447:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2430:5:2",
														"type": ""
													}
												],
												"src": "2397:116:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2579:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2589:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2604:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2598:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2598:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2589:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2644:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2620:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2620:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2620:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2557:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2565:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2573:5:2",
														"type": ""
													}
												],
												"src": "2519:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2736:271:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2782:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2784:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2784:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2784:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2757:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2766:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2753:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2753:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2778:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2749:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2749:32:2"
															},
															"nodeType": "YulIf",
															"src": "2746:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "2875:125:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2890:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2904:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2894:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2919:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2962:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2973:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2958:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2958:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2982:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2929:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2929:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2919:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2706:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2717:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2729:6:2",
														"type": ""
													}
												],
												"src": "2662:345:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3167:288:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3177:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3189:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3200:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3185:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3185:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3177:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3257:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3270:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3281:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3266:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3266:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3213:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3213:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3213:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3338:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3351:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3362:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3347:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3347:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3294:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3294:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3294:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3420:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3433:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3444:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3429:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3429:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3376:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3376:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3376:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3123:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3135:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3143:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3151:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3162:4:2",
														"type": ""
													}
												],
												"src": "3013:442:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3489:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3506:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3509:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3499:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3499:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3499:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3603:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3606:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3596:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3596:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3596:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3627:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3630:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3620:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3620:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3620:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3461:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3695:362:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3705:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3728:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3710:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3710:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3705:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3739:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3762:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3744:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3744:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3739:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3773:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3796:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3799:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3792:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3792:9:2"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "3777:11:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3810:41:2",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "3839:11:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3821:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3821:30:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "3810:7:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4028:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4030:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4030:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4030:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3961:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3954:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3954:9:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "3984:1:2"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "3991:7:2"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "4000:1:2"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "3987:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3987:15:2"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "3981:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3981:22:2"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "3934:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3934:83:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3914:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3914:113:2"
															},
															"nodeType": "YulIf",
															"src": "3911:139:2"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3678:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3681:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3687:7:2",
														"type": ""
													}
												],
												"src": "3647:410:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4189:206:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4199:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4211:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4222:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4207:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4207:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4199:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4279:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4292:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4303:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4288:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4288:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4235:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4235:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4235:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4360:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4373:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4384:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4369:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4369:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4316:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4316:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4316:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4153:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4165:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4173:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4184:4:2",
														"type": ""
													}
												],
												"src": "4063:332:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80630fc63d10146100515780633ba0b9a91461006f5780635f64b55b1461008d578063fe784eaa146100ab575b600080fd5b6100596100c7565b604051610066919061039f565b60405180910390f35b6100776100eb565b60405161008491906103d3565b60405180910390f35b6100956100f1565b6040516100a2919061039f565b60405180910390f35b6100c560048036038101906100c0919061041f565b610117565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b815260040161017292919061044c565b6020604051808303816000875af1158015610191573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b591906104ad565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610213939291906104da565b6020604051808303816000875af1158015610232573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025691906104ad565b506000600254826102679190610540565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016102c692919061044c565b6020604051808303816000875af11580156102e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030991906104ad565b503373ffffffffffffffffffffffffffffffffffffffff167f18704ae982dcd24a1beeeed3ecf045ab0520d7b7519b97adf3e4f40bf7efe3398383604051610352929190610582565b60405180910390a25050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103898261035e565b9050919050565b6103998161037e565b82525050565b60006020820190506103b46000830184610390565b92915050565b6000819050919050565b6103cd816103ba565b82525050565b60006020820190506103e860008301846103c4565b92915050565b600080fd5b6103fc816103ba565b811461040757600080fd5b50565b600081359050610419816103f3565b92915050565b600060208284031215610435576104346103ee565b5b60006104438482850161040a565b91505092915050565b60006040820190506104616000830185610390565b61046e60208301846103c4565b9392505050565b60008115159050919050565b61048a81610475565b811461049557600080fd5b50565b6000815190506104a781610481565b92915050565b6000602082840312156104c3576104c26103ee565b5b60006104d184828501610498565b91505092915050565b60006060820190506104ef6000830186610390565b6104fc6020830185610390565b61050960408301846103c4565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061054b826103ba565b9150610556836103ba565b9250828202610564816103ba565b9150828204841483151761057b5761057a610511565b5b5092915050565b600060408201905061059760008301856103c4565b6105a460208301846103c4565b939250505056fea2646970667358221220ed3d125381a2f6e1b056dc2f32fd625034bbd007b4cda92a5b8f0e8e615c4d2d64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xFC63D10 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x3BA0B9A9 EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x5F64B55B EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0xFE784EAA EQ PUSH2 0xAB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0xEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x3D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x41F JUMP JUMPDEST PUSH2 0x117 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172 SWAP3 SWAP2 SWAP1 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x191 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x4AD JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x232 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x4AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x540 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C6 SWAP3 SWAP2 SWAP1 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x4AD JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x18704AE982DCD24A1BEEEED3ECF045AB0520D7B7519B97ADF3E4F40BF7EFE339 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x352 SWAP3 SWAP2 SWAP1 PUSH2 0x582 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x389 DUP3 PUSH2 0x35E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x399 DUP2 PUSH2 0x37E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3B4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x390 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CD DUP2 PUSH2 0x3BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3FC DUP2 PUSH2 0x3BA JUMP JUMPDEST DUP2 EQ PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x419 DUP2 PUSH2 0x3F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x435 JUMPI PUSH2 0x434 PUSH2 0x3EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x443 DUP5 DUP3 DUP6 ADD PUSH2 0x40A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x461 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x390 JUMP JUMPDEST PUSH2 0x46E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x48A DUP2 PUSH2 0x475 JUMP JUMPDEST DUP2 EQ PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4A7 DUP2 PUSH2 0x481 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C3 JUMPI PUSH2 0x4C2 PUSH2 0x3EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4D1 DUP5 DUP3 DUP6 ADD PUSH2 0x498 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4EF PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x390 JUMP JUMPDEST PUSH2 0x4FC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x390 JUMP JUMPDEST PUSH2 0x509 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3C4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x54B DUP3 PUSH2 0x3BA JUMP JUMPDEST SWAP2 POP PUSH2 0x556 DUP4 PUSH2 0x3BA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x564 DUP2 PUSH2 0x3BA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x57B JUMPI PUSH2 0x57A PUSH2 0x511 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x597 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x5A4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED RETURNDATASIZE SLT MSTORE8 DUP2 LOG2 0xF6 0xE1 0xB0 JUMP 0xDC 0x2F ORIGIN REVERT PUSH3 0x5034BB 0xD0 SMOD 0xB4 0xCD 0xA9 0x2A JUMPDEST DUP16 0xE DUP15 PUSH2 0x5C4D 0x2D PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "171:1259:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;196:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;312:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;254:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;566:773;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;196:21;;;;;;;;;;;;:::o;312:27::-;;;;:::o;254:21::-;;;;;;;;;;;;;:::o;566:773::-;713:6;;;;;;;;;;706:22;;;737:4;744:7;706:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;836:6;;;;;;;;;;829:27;;;857:10;877:4;884:7;829:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;965:21;999:12;;989:7;:22;;;;:::i;:::-;965:46;;1095:6;;;;;;;;;;;1088:23;;;1112:10;1124:13;1088:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1297:10;1283:49;;;1309:7;1318:13;1283:49;;;;;;;:::i;:::-;;;;;;;;612:727;566:773;:::o;7:126:2:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:77::-;630:7;659:5;648:16;;593:77;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1109:117::-;1218:1;1215;1208:12;1355:122;1428:24;1446:5;1428:24;:::i;:::-;1421:5;1418:35;1408:63;;1467:1;1464;1457:12;1408:63;1355:122;:::o;1483:139::-;1529:5;1567:6;1554:20;1545:29;;1583:33;1610:5;1583:33;:::i;:::-;1483:139;;;;:::o;1628:329::-;1687:6;1736:2;1724:9;1715:7;1711:23;1707:32;1704:119;;;1742:79;;:::i;:::-;1704:119;1862:1;1887:53;1932:7;1923:6;1912:9;1908:22;1887:53;:::i;:::-;1877:63;;1833:117;1628:329;;;;:::o;1963:332::-;2084:4;2122:2;2111:9;2107:18;2099:26;;2135:71;2203:1;2192:9;2188:17;2179:6;2135:71;:::i;:::-;2216:72;2284:2;2273:9;2269:18;2260:6;2216:72;:::i;:::-;1963:332;;;;;:::o;2301:90::-;2335:7;2378:5;2371:13;2364:21;2353:32;;2301:90;;;:::o;2397:116::-;2467:21;2482:5;2467:21;:::i;:::-;2460:5;2457:32;2447:60;;2503:1;2500;2493:12;2447:60;2397:116;:::o;2519:137::-;2573:5;2604:6;2598:13;2589:22;;2620:30;2644:5;2620:30;:::i;:::-;2519:137;;;;:::o;2662:345::-;2729:6;2778:2;2766:9;2757:7;2753:23;2749:32;2746:119;;;2784:79;;:::i;:::-;2746:119;2904:1;2929:61;2982:7;2973:6;2962:9;2958:22;2929:61;:::i;:::-;2919:71;;2875:125;2662:345;;;;:::o;3013:442::-;3162:4;3200:2;3189:9;3185:18;3177:26;;3213:71;3281:1;3270:9;3266:17;3257:6;3213:71;:::i;:::-;3294:72;3362:2;3351:9;3347:18;3338:6;3294:72;:::i;:::-;3376;3444:2;3433:9;3429:18;3420:6;3376:72;:::i;:::-;3013:442;;;;;;:::o;3461:180::-;3509:77;3506:1;3499:88;3606:4;3603:1;3596:15;3630:4;3627:1;3620:15;3647:410;3687:7;3710:20;3728:1;3710:20;:::i;:::-;3705:25;;3744:20;3762:1;3744:20;:::i;:::-;3739:25;;3799:1;3796;3792:9;3821:30;3839:11;3821:30;:::i;:::-;3810:41;;4000:1;3991:7;3987:15;3984:1;3981:22;3961:1;3954:9;3934:83;3911:139;;4030:18;;:::i;:::-;3911:139;3695:362;3647:410;;;;:::o;4063:332::-;4184:4;4222:2;4211:9;4207:18;4199:26;;4235:71;4303:1;4292:9;4288:17;4279:6;4235:71;:::i;:::-;4316:72;4384:2;4373:9;4369:18;4360:6;4316:72;:::i;:::-;4063:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "301000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"exchangeRate()": "2429",
								"swapTokens(uint256)": "infinite",
								"tokenA()": "2489",
								"tokenB()": "2536"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 171,
									"end": 1430,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 171,
									"end": 1430,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 171,
									"end": 1430,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 394,
									"end": 560,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 394,
									"end": 560,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 394,
									"end": 560,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 394,
									"end": 560,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 394,
									"end": 560,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 394,
									"end": 560,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 394,
									"end": 560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 394,
									"end": 560,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 473,
									"end": 479,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 473,
									"end": 489,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 473,
									"end": 489,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 473,
									"end": 489,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 473,
									"end": 489,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 473,
									"end": 489,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 473,
									"end": 489,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 473,
									"end": 489,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 473,
									"end": 489,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 473,
									"end": 489,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 473,
									"end": 489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 473,
									"end": 489,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 473,
									"end": 489,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 473,
									"end": 489,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 473,
									"end": 489,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 473,
									"end": 489,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 473,
									"end": 489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 473,
									"end": 489,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 473,
									"end": 489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 508,
									"end": 515,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 499,
									"end": 505,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 499,
									"end": 505,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 499,
									"end": 515,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 499,
									"end": 515,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 499,
									"end": 515,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 499,
									"end": 515,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 499,
									"end": 515,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 499,
									"end": 515,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 499,
									"end": 515,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 499,
									"end": 515,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 499,
									"end": 515,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 499,
									"end": 515,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 499,
									"end": 515,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 499,
									"end": 515,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 499,
									"end": 515,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 499,
									"end": 515,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 499,
									"end": 515,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 499,
									"end": 515,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 499,
									"end": 515,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 499,
									"end": 515,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 540,
									"end": 553,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 525,
									"end": 537,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 525,
									"end": 553,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 525,
									"end": 553,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 525,
									"end": 553,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 525,
									"end": 553,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 394,
									"end": 560,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 171,
									"end": 1430,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 171,
									"end": 1430,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1299,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1307,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1333,
									"end": 1356,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1364,
									"end": 1443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 1565,
									"end": 1572,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1556,
									"end": 1562,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1545,
									"end": 1554,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 1541,
									"end": 1563,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1509,
									"end": 1573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 1704,
									"end": 1711,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1695,
									"end": 1701,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1684,
									"end": 1693,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 1680,
									"end": 1702,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1648,
									"end": 1712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1593,
									"end": 1722,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1843,
									"end": 1850,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1823,
									"end": 1832,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 1819,
									"end": 1841,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1787,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1732,
									"end": 1861,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1205,
									"end": 1868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 171,
									"end": 1430,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 171,
									"end": 1430,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 171,
									"end": 1430,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 171,
									"end": 1430,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 1430,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 171,
									"end": 1430,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 1430,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 171,
									"end": 1430,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 1430,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ed3d125381a2f6e1b056dc2f32fd625034bbd007b4cda92a5b8f0e8e615c4d2d64736f6c63430008120033",
									".code": [
										{
											"begin": 171,
											"end": 1430,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "PUSH",
											"source": 1,
											"value": "FC63D10"
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "PUSH",
											"source": 1,
											"value": "3BA0B9A9"
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "PUSH",
											"source": 1,
											"value": "5F64B55B"
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "PUSH",
											"source": 1,
											"value": "FE784EAA"
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 171,
											"end": 1430,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 196,
											"end": 217,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 196,
											"end": 217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 196,
											"end": 217,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 196,
											"end": 217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 196,
											"end": 217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 196,
											"end": 217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 196,
											"end": 217,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 196,
											"end": 217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 196,
											"end": 217,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 196,
											"end": 217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 217,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 312,
											"end": 339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 312,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 312,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 312,
											"end": 339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 312,
											"end": 339,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 312,
											"end": 339,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 312,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 312,
											"end": 339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 312,
											"end": 339,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 254,
											"end": 275,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 254,
											"end": 275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 254,
											"end": 275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 254,
											"end": 275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 254,
											"end": 275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 254,
											"end": 275,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 254,
											"end": 275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 254,
											"end": 275,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 254,
											"end": 275,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 254,
											"end": 275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 254,
											"end": 275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 254,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 254,
											"end": 275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 254,
											"end": 275,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 254,
											"end": 275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 254,
											"end": 275,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 254,
											"end": 275,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 254,
											"end": 275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 254,
											"end": 275,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 254,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 275,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 566,
											"end": 1339,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 566,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 566,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 566,
											"end": 1339,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 566,
											"end": 1339,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 566,
											"end": 1339,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 566,
											"end": 1339,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 566,
											"end": 1339,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 566,
											"end": 1339,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 566,
											"end": 1339,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 566,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 566,
											"end": 1339,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 566,
											"end": 1339,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 566,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 566,
											"end": 1339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 566,
											"end": 1339,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 566,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 566,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 566,
											"end": 1339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 566,
											"end": 1339,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 566,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 566,
											"end": 1339,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 196,
											"end": 217,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 217,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 196,
											"end": 217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 196,
											"end": 217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 217,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 196,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 196,
											"end": 217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 196,
											"end": 217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 312,
											"end": 339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 312,
											"end": 339,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 312,
											"end": 339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 254,
											"end": 275,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 254,
											"end": 275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 254,
											"end": 275,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 254,
											"end": 275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 254,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 254,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 275,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 254,
											"end": 275,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 254,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 275,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 254,
											"end": 275,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 254,
											"end": 275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 254,
											"end": 275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 254,
											"end": 275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 566,
											"end": 1339,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 566,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 713,
											"end": 719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 713,
											"end": 719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 713,
											"end": 719,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 713,
											"end": 719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 713,
											"end": 719,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 713,
											"end": 719,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 713,
											"end": 719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 713,
											"end": 719,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 713,
											"end": 719,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 713,
											"end": 719,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 706,
											"end": 728,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 706,
											"end": 728,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 706,
											"end": 728,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 737,
											"end": 741,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 744,
											"end": 751,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 706,
											"end": 752,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 706,
											"end": 752,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 706,
											"end": 752,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 706,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 706,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 706,
											"end": 752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 706,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 706,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 706,
											"end": 752,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 752,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 706,
											"end": 752,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 752,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 706,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 706,
											"end": 752,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 706,
											"end": 752,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 706,
											"end": 752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 706,
											"end": 752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 706,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 706,
											"end": 752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 706,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 706,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 842,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 836,
											"end": 842,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 836,
											"end": 842,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 836,
											"end": 842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 829,
											"end": 856,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 856,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 829,
											"end": 856,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 857,
											"end": 867,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 877,
											"end": 881,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 884,
											"end": 891,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 829,
											"end": 892,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 829,
											"end": 892,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 829,
											"end": 892,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 829,
											"end": 892,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 829,
											"end": 892,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 829,
											"end": 892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 829,
											"end": 892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 829,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 829,
											"end": 892,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 892,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 829,
											"end": 892,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 892,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 892,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 829,
											"end": 892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 829,
											"end": 892,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 829,
											"end": 892,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 829,
											"end": 892,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 829,
											"end": 892,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 829,
											"end": 892,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 829,
											"end": 892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 829,
											"end": 892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 829,
											"end": 892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 965,
											"end": 986,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1011,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 999,
											"end": 1011,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 989,
											"end": 996,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 989,
											"end": 1011,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 989,
											"end": 1011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1011,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 989,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1111,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1088,
											"end": 1111,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1111,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1112,
											"end": 1122,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1124,
											"end": 1137,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1088,
											"end": 1138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1088,
											"end": 1138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1307,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1283,
											"end": 1332,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "18704AE982DCD24A1BEEEED3ECF045AB0520D7B7519B97ADF3E4F40BF7EFE339"
										},
										{
											"begin": 1309,
											"end": 1316,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1331,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1332,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1332,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1332,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1332,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1283,
											"end": 1332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1332,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1332,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1332,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1332,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1332,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1332,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1332,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 612,
											"end": 1339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 566,
											"end": 1339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 566,
											"end": 1339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 593,
											"end": 670,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 593,
											"end": 670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 630,
											"end": 637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 648,
											"end": 664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 648,
											"end": 664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 593,
											"end": 670,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 593,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1208,
											"end": 1220,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1446,
											"end": 1451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1428,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1426,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1418,
											"end": 1453,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1469,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1529,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1574,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1610,
											"end": 1615,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1583,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1711,
											"end": 1734,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1739,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1742,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1862,
											"end": 1863,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1932,
											"end": 1939,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 1921,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1908,
											"end": 1930,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1887,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2124,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2111,
											"end": 2120,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 2125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2203,
											"end": 2204,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2192,
											"end": 2201,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2205,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2135,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2284,
											"end": 2286,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2266,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2216,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2288,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2216,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2391,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2301,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2335,
											"end": 2342,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2384,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2385,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2353,
											"end": 2385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2353,
											"end": 2385,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2513,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2397,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2482,
											"end": 2487,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2467,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2488,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2467,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2489,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2447,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2447,
											"end": 2507,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2504,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2501,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2505,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2447,
											"end": 2507,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2447,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2513,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2519,
											"end": 2656,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2519,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2578,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2604,
											"end": 2610,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2611,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2611,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2620,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2644,
											"end": 2649,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2620,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2620,
											"end": 2650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2620,
											"end": 2650,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2620,
											"end": 2650,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2519,
											"end": 2656,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2519,
											"end": 2656,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2519,
											"end": 2656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2519,
											"end": 2656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2519,
											"end": 2656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2662,
											"end": 3007,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2662,
											"end": 3007,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2729,
											"end": 2735,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2778,
											"end": 2780,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2766,
											"end": 2775,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2764,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2753,
											"end": 2776,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2749,
											"end": 2781,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2865,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2746,
											"end": 2865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2784,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2784,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2784,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2784,
											"end": 2863,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2784,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2865,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2746,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2904,
											"end": 2905,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2929,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2982,
											"end": 2989,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 2979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 2971,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 2980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2929,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2929,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2929,
											"end": 2990,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2929,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2990,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2990,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2875,
											"end": 3000,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2662,
											"end": 3007,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2662,
											"end": 3007,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2662,
											"end": 3007,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2662,
											"end": 3007,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2662,
											"end": 3007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3455,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3013,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3162,
											"end": 3166,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3200,
											"end": 3202,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3189,
											"end": 3198,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3177,
											"end": 3203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3281,
											"end": 3282,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3270,
											"end": 3279,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3266,
											"end": 3283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3257,
											"end": 3263,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3213,
											"end": 3284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3284,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3213,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3362,
											"end": 3364,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3351,
											"end": 3360,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3338,
											"end": 3344,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3294,
											"end": 3366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3366,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3294,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3376,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3444,
											"end": 3446,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3433,
											"end": 3442,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3426,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3376,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3376,
											"end": 3448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3376,
											"end": 3448,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3376,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3455,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3455,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3461,
											"end": 3641,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3461,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3586,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3506,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3587,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3606,
											"end": 3610,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3603,
											"end": 3604,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3596,
											"end": 3611,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3630,
											"end": 3634,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3627,
											"end": 3628,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3620,
											"end": 3635,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3647,
											"end": 4057,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3647,
											"end": 4057,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3687,
											"end": 3694,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3710,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3728,
											"end": 3729,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3710,
											"end": 3730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3730,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3710,
											"end": 3730,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3730,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3730,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3744,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3762,
											"end": 3763,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3744,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3744,
											"end": 3764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3744,
											"end": 3764,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3744,
											"end": 3764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3764,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3764,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3800,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3796,
											"end": 3797,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3792,
											"end": 3801,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3821,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3839,
											"end": 3850,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3821,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3821,
											"end": 3851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3821,
											"end": 3851,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3821,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3810,
											"end": 3851,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3810,
											"end": 3851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4000,
											"end": 4001,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 3998,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4002,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3984,
											"end": 3985,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3981,
											"end": 4003,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3961,
											"end": 3962,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3954,
											"end": 3963,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 4017,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3911,
											"end": 4050,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3911,
											"end": 4050,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4030,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4030,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4030,
											"end": 4048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4030,
											"end": 4048,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4030,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3911,
											"end": 4050,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3911,
											"end": 4050,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 4057,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3647,
											"end": 4057,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3647,
											"end": 4057,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3647,
											"end": 4057,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3647,
											"end": 4057,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3647,
											"end": 4057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4063,
											"end": 4395,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4063,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4184,
											"end": 4188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4222,
											"end": 4224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4211,
											"end": 4220,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4207,
											"end": 4225,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4199,
											"end": 4225,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4199,
											"end": 4225,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4235,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4303,
											"end": 4304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4292,
											"end": 4301,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4288,
											"end": 4305,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4285,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4235,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4235,
											"end": 4306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4235,
											"end": 4306,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4235,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4316,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4384,
											"end": 4386,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4373,
											"end": 4382,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4369,
											"end": 4387,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4366,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4316,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4316,
											"end": 4388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4316,
											"end": 4388,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4316,
											"end": 4388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4063,
											"end": 4395,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4063,
											"end": 4395,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4063,
											"end": 4395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4063,
											"end": 4395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4063,
											"end": 4395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4063,
											"end": 4395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"contracts/3_TokenSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"exchangeRate()": "3ba0b9a9",
							"swapTokens(uint256)": "fe784eaa",
							"tokenA()": "0fc63d10",
							"tokenB()": "5f64b55b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_exchangeRate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swappedAmount\",\"type\":\"uint256\"}],\"name\":\"TokensSwapped\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"exchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"swapTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/3_TokenSwap.sol\":\"TokenSwap\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"contracts/3_TokenSwap.sol\":{\"keccak256\":\"0xa52d3c7c76ff7bda35bd1c3db2d77b5deae58ed06086557da2671bb0d426d0a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56f3bbe9da98add3b9dbe58079420fda44b0b7d4b176f83aec9631eb09b0388f\",\"dweb:/ipfs/QmQ2TGkewkmTW44NbTouL8q1iFM7UDV7DjRCMMfyMntULE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 82,
								"contract": "contracts/3_TokenSwap.sol:TokenSwap",
								"label": "tokenA",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 84,
								"contract": "contracts/3_TokenSwap.sol:TokenSwap",
								"label": "tokenB",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 86,
								"contract": "contracts/3_TokenSwap.sol:TokenSwap",
								"label": "exchangeRate",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2668:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2682:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2694:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2728:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:0"
									},
									"scope": 77,
									"src": "2646:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2534:0",
							"usedErrors": []
						}
					],
					"src": "106:2631:0"
				},
				"id": 0
			},
			"contracts/3_TokenSwap.sol": {
				"ast": {
					"absolutePath": "contracts/3_TokenSwap.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"TokenSwap": [
							169
						]
					},
					"id": 170,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 170,
							"sourceUnit": 78,
							"src": "56:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TokenSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 169,
							"linearizedBaseContracts": [
								169
							],
							"name": "TokenSwap",
							"nameLocation": "180:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0fc63d10",
									"id": 82,
									"mutability": "mutable",
									"name": "tokenA",
									"nameLocation": "211:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 169,
									"src": "196:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 81,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "196:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5f64b55b",
									"id": 84,
									"mutability": "mutable",
									"name": "tokenB",
									"nameLocation": "269:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 169,
									"src": "254:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 83,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "254:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3ba0b9a9",
									"id": 86,
									"mutability": "mutable",
									"name": "exchangeRate",
									"nameLocation": "327:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 169,
									"src": "312:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 85,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "312:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "463:97:1",
										"statements": [
											{
												"expression": {
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 95,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "473:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 96,
														"name": "_tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "482:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "473:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "473:16:1"
											},
											{
												"expression": {
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 99,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "499:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 100,
														"name": "_tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "508:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "499:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 102,
												"nodeType": "ExpressionStatement",
												"src": "499:16:1"
											},
											{
												"expression": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 103,
														"name": "exchangeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "525:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 104,
														"name": "_exchangeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "540:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "525:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "525:28:1"
											}
										]
									},
									"id": 108,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "_tokenA",
												"nameLocation": "414:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "406:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "_tokenB",
												"nameLocation": "431:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "423:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "423:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "_exchangeRate",
												"nameLocation": "448:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "440:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "463:0:1"
									},
									"scope": 169,
									"src": "394:166:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "612:727:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 119,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "737:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenSwap_$169",
																		"typeString": "contract TokenSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenSwap_$169",
																		"typeString": "contract TokenSwap"
																	}
																],
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "729:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 117,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "729:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "729:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 121,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "744:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 114,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 82,
																	"src": "713:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 113,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "706:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "706:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "721:7:1",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 64,
														"src": "706:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "706:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "706:46:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 128,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "857:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "861:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "857:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 132,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "877:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenSwap_$169",
																		"typeString": "contract TokenSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenSwap_$169",
																		"typeString": "contract TokenSwap"
																	}
																],
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "869:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 130,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "869:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "869:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 134,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "884:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 125,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 82,
																	"src": "836:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 124,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "829:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "829:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "844:12:1",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "829:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "829:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "829:63:1"
											},
											{
												"assignments": [
													138
												],
												"declarations": [
													{
														"constant": false,
														"id": 138,
														"mutability": "mutable",
														"name": "swappedAmount",
														"nameLocation": "973:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "965:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 137,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "965:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 142,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 139,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "989:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 140,
														"name": "exchangeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "999:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "989:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "965:46:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 147,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1112:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1116:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1112:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 149,
															"name": "swappedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "1124:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 144,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "1095:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 143,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1088:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1088:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1103:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "1088:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1088:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "1088:50:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 153,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1297:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1301:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1297:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 155,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "1309:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 156,
															"name": "swappedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "1318:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 152,
														"name": "TokensSwapped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "1283:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1283:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 158,
												"nodeType": "EmitStatement",
												"src": "1278:54:1"
											}
										]
									},
									"functionSelector": "fe784eaa",
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokens",
									"nameLocation": "575:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "594:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "586:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "585:17:1"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:0:1"
									},
									"scope": 169,
									"src": "566:773:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "18704ae982dcd24a1beeeed3ecf045ab0520d7b7519b97adf3e4f40bf7efe339",
									"id": 168,
									"name": "TokensSwapped",
									"nameLocation": "1351:13:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1381:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1365:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1365:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1397:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1389:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1389:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "swappedAmount",
												"nameLocation": "1413:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1405:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1405:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1364:63:1"
									},
									"src": "1345:83:1"
								}
							],
							"scope": 170,
							"src": "171:1259:1",
							"usedErrors": []
						}
					],
					"src": "32:1398:1"
				},
				"id": 1
			}
		}
	}
}