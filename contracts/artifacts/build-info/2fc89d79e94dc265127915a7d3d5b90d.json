{
	"id": "2fc89d79e94dc265127915a7d3d5b90d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/1_TokenSale.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n// CODE NOT AUDITED\n// USE ONLY FOR EDUCATIONAL PURPOSE\n\ncontract TokenSale {\n    address public token;          // Address of the token being sold\n    uint256 public tokenPrice;     // Price of each token\n\n    constructor(address _token, uint256 _tokenPrice) {\n        token = _token;\n        tokenPrice = _tokenPrice;\n    }\n\n    function buyTokens(uint256 _amount) external payable {\n        uint256 totalPrice = _amount * tokenPrice;\n        require(msg.value >= totalPrice, \"Insufficient payment\");\n\n        // Perform token transfer to the buyer\n        IERC20(token).transfer(msg.sender, _amount);  // Transfer `_amount` tokens to the buyer's address\n\n        // Emit an event to indicate a successful purchase\n        emit TokensPurchased(msg.sender, _amount, totalPrice);\n    }\n\n    event TokensPurchased(address indexed buyer, uint256 amount, uint256 totalPrice);\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/1_TokenSale.sol": {
				"TokenSale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenPrice",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalPrice",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/1_TokenSale.sol\":171:988  contract TokenSale {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/1_TokenSale.sol\":325:439  constructor(address _token, uint256 _tokenPrice) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/1_TokenSale.sol\":392:398  _token */\n  dup2\n    /* \"contracts/1_TokenSale.sol\":384:389  token */\n  0x00\n  dup1\n    /* \"contracts/1_TokenSale.sol\":384:398  token = _token */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/1_TokenSale.sol\":421:432  _tokenPrice */\n  dup1\n    /* \"contracts/1_TokenSale.sol\":408:418  tokenPrice */\n  0x01\n    /* \"contracts/1_TokenSale.sol\":408:432  tokenPrice = _tokenPrice */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/1_TokenSale.sol\":325:439  constructor(address _token, uint256 _tokenPrice) {... */\n  pop\n  pop\n    /* \"contracts/1_TokenSale.sol\":171:988  contract TokenSale {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_23\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_25\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_26:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_28\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_14:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_15:\n    /* \"#utility.yul\":1001:1025   */\n  tag_31\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_14\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_32:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_16:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_34\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_15\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1712   */\ntag_3:\n    /* \"#utility.yul\":1284:1290   */\n  0x00\n    /* \"#utility.yul\":1292:1298   */\n  dup1\n    /* \"#utility.yul\":1341:1343   */\n  0x40\n    /* \"#utility.yul\":1329:1338   */\n  dup4\n    /* \"#utility.yul\":1320:1327   */\n  dup6\n    /* \"#utility.yul\":1316:1339   */\n  sub\n    /* \"#utility.yul\":1312:1344   */\n  slt\n    /* \"#utility.yul\":1309:1428   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1347:1426   */\n  tag_37\n  tag_8\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1309:1428   */\ntag_36:\n    /* \"#utility.yul\":1467:1468   */\n  0x00\n    /* \"#utility.yul\":1492:1556   */\n  tag_38\n    /* \"#utility.yul\":1548:1555   */\n  dup6\n    /* \"#utility.yul\":1539:1545   */\n  dup3\n    /* \"#utility.yul\":1528:1537   */\n  dup7\n    /* \"#utility.yul\":1524:1546   */\n  add\n    /* \"#utility.yul\":1492:1556   */\n  tag_13\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1482:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1438:1566   */\n  pop\n    /* \"#utility.yul\":1605:1607   */\n  0x20\n    /* \"#utility.yul\":1631:1695   */\n  tag_39\n    /* \"#utility.yul\":1687:1694   */\n  dup6\n    /* \"#utility.yul\":1678:1684   */\n  dup3\n    /* \"#utility.yul\":1667:1676   */\n  dup7\n    /* \"#utility.yul\":1663:1685   */\n  add\n    /* \"#utility.yul\":1631:1695   */\n  tag_16\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1621:1695   */\n  swap2\n  pop\n    /* \"#utility.yul\":1576:1705   */\n  pop\n    /* \"#utility.yul\":1205:1712   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/1_TokenSale.sol\":171:988  contract TokenSale {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/1_TokenSale.sol\":171:988  contract TokenSale {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3610724e\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x7ff9b596\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/1_TokenSale.sol\":445:899  function buyTokens(uint256 _amount) external payable {... */\n    tag_2:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/1_TokenSale.sol\":266:291  uint256 public tokenPrice */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      pop\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/1_TokenSale.sol\":196:216  address public token */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/1_TokenSale.sol\":445:899  function buyTokens(uint256 _amount) external payable {... */\n    tag_8:\n        /* \"contracts/1_TokenSale.sol\":508:526  uint256 totalPrice */\n      0x00\n        /* \"contracts/1_TokenSale.sol\":539:549  tokenPrice */\n      sload(0x01)\n        /* \"contracts/1_TokenSale.sol\":529:536  _amount */\n      dup3\n        /* \"contracts/1_TokenSale.sol\":529:549  _amount * tokenPrice */\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n        /* \"contracts/1_TokenSale.sol\":508:549  uint256 totalPrice = _amount * tokenPrice */\n      swap1\n      pop\n        /* \"contracts/1_TokenSale.sol\":580:590  totalPrice */\n      dup1\n        /* \"contracts/1_TokenSale.sol\":567:576  msg.value */\n      callvalue\n        /* \"contracts/1_TokenSale.sol\":567:590  msg.value >= totalPrice */\n      lt\n      iszero\n        /* \"contracts/1_TokenSale.sol\":559:615  require(msg.value >= totalPrice, \"Insufficient payment\") */\n      tag_22\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_23\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"contracts/1_TokenSale.sol\":680:685  token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/1_TokenSale.sol\":673:695  IERC20(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/1_TokenSale.sol\":696:706  msg.sender */\n      caller\n        /* \"contracts/1_TokenSale.sol\":708:715  _amount */\n      dup5\n        /* \"contracts/1_TokenSale.sol\":673:716  IERC20(token).transfer(msg.sender, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_25\n      swap3\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_28:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      pop\n        /* \"contracts/1_TokenSale.sol\":860:870  msg.sender */\n      caller\n        /* \"contracts/1_TokenSale.sol\":844:892  TokensPurchased(msg.sender, _amount, totalPrice) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33\n        /* \"contracts/1_TokenSale.sol\":872:879  _amount */\n      dup4\n        /* \"contracts/1_TokenSale.sol\":881:891  totalPrice */\n      dup4\n        /* \"contracts/1_TokenSale.sol\":844:892  TokensPurchased(msg.sender, _amount, totalPrice) */\n      mload(0x40)\n      tag_31\n      swap3\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/1_TokenSale.sol\":498:899  {... */\n      pop\n        /* \"contracts/1_TokenSale.sol\":445:899  function buyTokens(uint256 _amount) external payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/1_TokenSale.sol\":266:291  uint256 public tokenPrice */\n    tag_11:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/1_TokenSale.sol\":196:216  address public token */\n    tag_16:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_34:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_36:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_37:\n        /* \"#utility.yul\":490:514   */\n      tag_56\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_36\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_57\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_57:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_38:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_59\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_37\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_7:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_61\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_62\n      tag_34\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":766:885   */\n    tag_61:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_63\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_38\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_39:\n        /* \"#utility.yul\":1112:1136   */\n      tag_65\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_36\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_13:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_67\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_39\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_40:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_41:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_70\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_40\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_42:\n        /* \"#utility.yul\":1698:1722   */\n      tag_72\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_41\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1957   */\n    tag_18:\n        /* \"#utility.yul\":1828:1832   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1855:1864   */\n      dup3\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"#utility.yul\":1843:1869   */\n      swap1\n      pop\n        /* \"#utility.yul\":1879:1950   */\n      tag_74\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1936:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1949   */\n      add\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1879:1950   */\n      tag_42\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1735:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2143   */\n    tag_43:\n        /* \"#utility.yul\":2011:2088   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2008:2009   */\n      0x00\n        /* \"#utility.yul\":2001:2089   */\n      mstore\n        /* \"#utility.yul\":2108:2112   */\n      0x11\n        /* \"#utility.yul\":2105:2106   */\n      0x04\n        /* \"#utility.yul\":2098:2113   */\n      mstore\n        /* \"#utility.yul\":2132:2136   */\n      0x24\n        /* \"#utility.yul\":2129:2130   */\n      0x00\n        /* \"#utility.yul\":2122:2137   */\n      revert\n        /* \"#utility.yul\":2149:2559   */\n    tag_21:\n        /* \"#utility.yul\":2189:2196   */\n      0x00\n        /* \"#utility.yul\":2212:2232   */\n      tag_77\n        /* \"#utility.yul\":2230:2231   */\n      dup3\n        /* \"#utility.yul\":2212:2232   */\n      tag_36\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2207:2232   */\n      swap2\n      pop\n        /* \"#utility.yul\":2246:2266   */\n      tag_78\n        /* \"#utility.yul\":2264:2265   */\n      dup4\n        /* \"#utility.yul\":2246:2266   */\n      tag_36\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2241:2266   */\n      swap3\n      pop\n        /* \"#utility.yul\":2301:2302   */\n      dup3\n        /* \"#utility.yul\":2298:2299   */\n      dup3\n        /* \"#utility.yul\":2294:2303   */\n      mul\n        /* \"#utility.yul\":2323:2353   */\n      tag_79\n        /* \"#utility.yul\":2341:2352   */\n      dup2\n        /* \"#utility.yul\":2323:2353   */\n      tag_36\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2312:2353   */\n      swap2\n      pop\n        /* \"#utility.yul\":2502:2503   */\n      dup3\n        /* \"#utility.yul\":2493:2500   */\n      dup3\n        /* \"#utility.yul\":2489:2504   */\n      div\n        /* \"#utility.yul\":2486:2487   */\n      dup5\n        /* \"#utility.yul\":2483:2505   */\n      eq\n        /* \"#utility.yul\":2463:2464   */\n      dup4\n        /* \"#utility.yul\":2456:2465   */\n      iszero\n        /* \"#utility.yul\":2436:2519   */\n      or\n        /* \"#utility.yul\":2413:2552   */\n      tag_80\n      jumpi\n        /* \"#utility.yul\":2532:2550   */\n      tag_81\n      tag_43\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2413:2552   */\n    tag_80:\n        /* \"#utility.yul\":2197:2559   */\n      pop\n        /* \"#utility.yul\":2149:2559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2565:2734   */\n    tag_44:\n        /* \"#utility.yul\":2649:2660   */\n      0x00\n        /* \"#utility.yul\":2683:2689   */\n      dup3\n        /* \"#utility.yul\":2678:2681   */\n      dup3\n        /* \"#utility.yul\":2671:2690   */\n      mstore\n        /* \"#utility.yul\":2723:2727   */\n      0x20\n        /* \"#utility.yul\":2718:2721   */\n      dup3\n        /* \"#utility.yul\":2714:2728   */\n      add\n        /* \"#utility.yul\":2699:2728   */\n      swap1\n      pop\n        /* \"#utility.yul\":2565:2734   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2740:2910   */\n    tag_45:\n        /* \"#utility.yul\":2880:2902   */\n      0x496e73756666696369656e74207061796d656e74000000000000000000000000\n        /* \"#utility.yul\":2876:2877   */\n      0x00\n        /* \"#utility.yul\":2868:2874   */\n      dup3\n        /* \"#utility.yul\":2864:2878   */\n      add\n        /* \"#utility.yul\":2857:2903   */\n      mstore\n        /* \"#utility.yul\":2740:2910   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2916:3282   */\n    tag_46:\n        /* \"#utility.yul\":3058:3061   */\n      0x00\n        /* \"#utility.yul\":3079:3146   */\n      tag_85\n        /* \"#utility.yul\":3143:3145   */\n      0x14\n        /* \"#utility.yul\":3138:3141   */\n      dup4\n        /* \"#utility.yul\":3079:3146   */\n      tag_44\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":3072:3146   */\n      swap2\n      pop\n        /* \"#utility.yul\":3155:3248   */\n      tag_86\n        /* \"#utility.yul\":3244:3247   */\n      dup3\n        /* \"#utility.yul\":3155:3248   */\n      tag_45\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3273:3275   */\n      0x20\n        /* \"#utility.yul\":3268:3271   */\n      dup3\n        /* \"#utility.yul\":3264:3276   */\n      add\n        /* \"#utility.yul\":3257:3276   */\n      swap1\n      pop\n        /* \"#utility.yul\":2916:3282   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3288:3707   */\n    tag_24:\n        /* \"#utility.yul\":3454:3458   */\n      0x00\n        /* \"#utility.yul\":3492:3494   */\n      0x20\n        /* \"#utility.yul\":3481:3490   */\n      dup3\n        /* \"#utility.yul\":3477:3495   */\n      add\n        /* \"#utility.yul\":3469:3495   */\n      swap1\n      pop\n        /* \"#utility.yul\":3541:3550   */\n      dup2\n        /* \"#utility.yul\":3535:3539   */\n      dup2\n        /* \"#utility.yul\":3531:3551   */\n      sub\n        /* \"#utility.yul\":3527:3528   */\n      0x00\n        /* \"#utility.yul\":3516:3525   */\n      dup4\n        /* \"#utility.yul\":3512:3529   */\n      add\n        /* \"#utility.yul\":3505:3552   */\n      mstore\n        /* \"#utility.yul\":3569:3700   */\n      tag_88\n        /* \"#utility.yul\":3695:3699   */\n      dup2\n        /* \"#utility.yul\":3569:3700   */\n      tag_46\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":3561:3700   */\n      swap1\n      pop\n        /* \"#utility.yul\":3288:3707   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3713:4045   */\n    tag_26:\n        /* \"#utility.yul\":3834:3838   */\n      0x00\n        /* \"#utility.yul\":3872:3874   */\n      0x40\n        /* \"#utility.yul\":3861:3870   */\n      dup3\n        /* \"#utility.yul\":3857:3875   */\n      add\n        /* \"#utility.yul\":3849:3875   */\n      swap1\n      pop\n        /* \"#utility.yul\":3885:3956   */\n      tag_90\n        /* \"#utility.yul\":3953:3954   */\n      0x00\n        /* \"#utility.yul\":3942:3951   */\n      dup4\n        /* \"#utility.yul\":3938:3955   */\n      add\n        /* \"#utility.yul\":3929:3935   */\n      dup6\n        /* \"#utility.yul\":3885:3956   */\n      tag_42\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":3966:4038   */\n      tag_91\n        /* \"#utility.yul\":4034:4036   */\n      0x20\n        /* \"#utility.yul\":4023:4032   */\n      dup4\n        /* \"#utility.yul\":4019:4037   */\n      add\n        /* \"#utility.yul\":4010:4016   */\n      dup5\n        /* \"#utility.yul\":3966:4038   */\n      tag_39\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":3713:4045   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4051:4141   */\n    tag_47:\n        /* \"#utility.yul\":4085:4092   */\n      0x00\n        /* \"#utility.yul\":4128:4133   */\n      dup2\n        /* \"#utility.yul\":4121:4134   */\n      iszero\n        /* \"#utility.yul\":4114:4135   */\n      iszero\n        /* \"#utility.yul\":4103:4135   */\n      swap1\n      pop\n        /* \"#utility.yul\":4051:4141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4147:4263   */\n    tag_48:\n        /* \"#utility.yul\":4217:4238   */\n      tag_94\n        /* \"#utility.yul\":4232:4237   */\n      dup2\n        /* \"#utility.yul\":4217:4238   */\n      tag_47\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":4210:4215   */\n      dup2\n        /* \"#utility.yul\":4207:4239   */\n      eq\n        /* \"#utility.yul\":4197:4257   */\n      tag_95\n      jumpi\n        /* \"#utility.yul\":4253:4254   */\n      0x00\n        /* \"#utility.yul\":4250:4251   */\n      dup1\n        /* \"#utility.yul\":4243:4255   */\n      revert\n        /* \"#utility.yul\":4197:4257   */\n    tag_95:\n        /* \"#utility.yul\":4147:4263   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4269:4406   */\n    tag_49:\n        /* \"#utility.yul\":4323:4328   */\n      0x00\n        /* \"#utility.yul\":4354:4360   */\n      dup2\n        /* \"#utility.yul\":4348:4361   */\n      mload\n        /* \"#utility.yul\":4339:4361   */\n      swap1\n      pop\n        /* \"#utility.yul\":4370:4400   */\n      tag_97\n        /* \"#utility.yul\":4394:4399   */\n      dup2\n        /* \"#utility.yul\":4370:4400   */\n      tag_48\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":4269:4406   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4412:4757   */\n    tag_30:\n        /* \"#utility.yul\":4479:4485   */\n      0x00\n        /* \"#utility.yul\":4528:4530   */\n      0x20\n        /* \"#utility.yul\":4516:4525   */\n      dup3\n        /* \"#utility.yul\":4507:4514   */\n      dup5\n        /* \"#utility.yul\":4503:4526   */\n      sub\n        /* \"#utility.yul\":4499:4531   */\n      slt\n        /* \"#utility.yul\":4496:4615   */\n      iszero\n      tag_99\n      jumpi\n        /* \"#utility.yul\":4534:4613   */\n      tag_100\n      tag_34\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":4496:4615   */\n    tag_99:\n        /* \"#utility.yul\":4654:4655   */\n      0x00\n        /* \"#utility.yul\":4679:4740   */\n      tag_101\n        /* \"#utility.yul\":4732:4739   */\n      dup5\n        /* \"#utility.yul\":4723:4729   */\n      dup3\n        /* \"#utility.yul\":4712:4721   */\n      dup6\n        /* \"#utility.yul\":4708:4730   */\n      add\n        /* \"#utility.yul\":4679:4740   */\n      tag_49\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":4669:4740   */\n      swap2\n      pop\n        /* \"#utility.yul\":4625:4750   */\n      pop\n        /* \"#utility.yul\":4412:4757   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4763:5095   */\n    tag_32:\n        /* \"#utility.yul\":4884:4888   */\n      0x00\n        /* \"#utility.yul\":4922:4924   */\n      0x40\n        /* \"#utility.yul\":4911:4920   */\n      dup3\n        /* \"#utility.yul\":4907:4925   */\n      add\n        /* \"#utility.yul\":4899:4925   */\n      swap1\n      pop\n        /* \"#utility.yul\":4935:5006   */\n      tag_103\n        /* \"#utility.yul\":5003:5004   */\n      0x00\n        /* \"#utility.yul\":4992:5001   */\n      dup4\n        /* \"#utility.yul\":4988:5005   */\n      add\n        /* \"#utility.yul\":4979:4985   */\n      dup6\n        /* \"#utility.yul\":4935:5006   */\n      tag_39\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":5016:5088   */\n      tag_104\n        /* \"#utility.yul\":5084:5086   */\n      0x20\n        /* \"#utility.yul\":5073:5082   */\n      dup4\n        /* \"#utility.yul\":5069:5087   */\n      add\n        /* \"#utility.yul\":5060:5066   */\n      dup5\n        /* \"#utility.yul\":5016:5088   */\n      tag_39\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":4763:5095   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203b4db52e4c6f67f04033b0235cdf300dfd58ccab5d7606ec73a48f139e2f887864736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_100": {
									"entryPoint": null,
									"id": 100,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256_fromMemory": {
									"entryPoint": 281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 133,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 128,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1715:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:2",
														"type": ""
													}
												],
												"src": "696:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "890:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "900:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "911:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "872:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "882:7:2",
														"type": ""
													}
												],
												"src": "845:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "971:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1028:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:43:2"
															},
															"nodeType": "YulIf",
															"src": "981:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "964:5:2",
														"type": ""
													}
												],
												"src": "928:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1119:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1129:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1097:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1105:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1113:5:2",
														"type": ""
													}
												],
												"src": "1056:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1299:413:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1345:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1347:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1347:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1347:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1320:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1329:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1316:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1316:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1312:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1312:32:2"
															},
															"nodeType": "YulIf",
															"src": "1309:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1438:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1453:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1467:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1457:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1482:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1528:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1539:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1524:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1524:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1548:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1492:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1492:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1482:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1576:129:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1591:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1605:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1595:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1621:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1667:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1678:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1663:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1663:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1687:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1631:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1631:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1621:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1261:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1272:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1284:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1292:6:2",
														"type": ""
													}
												],
												"src": "1205:507:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161064e38038061064e83398181016040528101906100329190610119565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806001819055505050610159565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100b082610085565b9050919050565b6100c0816100a5565b81146100cb57600080fd5b50565b6000815190506100dd816100b7565b92915050565b6000819050919050565b6100f6816100e3565b811461010157600080fd5b50565b600081519050610113816100ed565b92915050565b600080604083850312156101305761012f610080565b5b600061013e858286016100ce565b925050602061014f85828601610104565b9150509250929050565b6104e6806101686000396000f3fe6080604052600436106100345760003560e01c80633610724e146100395780637ff9b59614610055578063fc0c546a14610080575b600080fd5b610053600480360381019061004e9190610258565b6100ab565b005b34801561006157600080fd5b5061006a6101f3565b6040516100779190610294565b60405180910390f35b34801561008c57600080fd5b506100956101f9565b6040516100a291906102f0565b60405180910390f35b6000600154826100bb919061033a565b905080341015610100576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f7906103d9565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161015b9291906103f9565b6020604051808303816000875af115801561017a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019e919061045a565b503373ffffffffffffffffffffffffffffffffffffffff167f8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f3383836040516101e7929190610487565b60405180910390a25050565b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b6000819050919050565b61023581610222565b811461024057600080fd5b50565b6000813590506102528161022c565b92915050565b60006020828403121561026e5761026d61021d565b5b600061027c84828501610243565b91505092915050565b61028e81610222565b82525050565b60006020820190506102a96000830184610285565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102da826102af565b9050919050565b6102ea816102cf565b82525050565b600060208201905061030560008301846102e1565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061034582610222565b915061035083610222565b925082820261035e81610222565b915082820484148315176103755761037461030b565b5b5092915050565b600082825260208201905092915050565b7f496e73756666696369656e74207061796d656e74000000000000000000000000600082015250565b60006103c360148361037c565b91506103ce8261038d565b602082019050919050565b600060208201905081810360008301526103f2816103b6565b9050919050565b600060408201905061040e60008301856102e1565b61041b6020830184610285565b9392505050565b60008115159050919050565b61043781610422565b811461044257600080fd5b50565b6000815190506104548161042e565b92915050565b6000602082840312156104705761046f61021d565b5b600061047e84828501610445565b91505092915050565b600060408201905061049c6000830185610285565b6104a96020830184610285565b939250505056fea26469706673582212203b4db52e4c6f67f04033b0235cdf300dfd58ccab5d7606ec73a48f139e2f887864736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x64E CODESIZE SUB DUP1 PUSH2 0x64E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x119 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x159 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0 DUP3 PUSH2 0x85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC0 DUP2 PUSH2 0xA5 JUMP JUMPDEST DUP2 EQ PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xDD DUP2 PUSH2 0xB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF6 DUP2 PUSH2 0xE3 JUMP JUMPDEST DUP2 EQ PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x113 DUP2 PUSH2 0xED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x130 JUMPI PUSH2 0x12F PUSH2 0x80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13E DUP6 DUP3 DUP7 ADD PUSH2 0xCE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14F DUP6 DUP3 DUP7 ADD PUSH2 0x104 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E6 DUP1 PUSH2 0x168 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3610724E EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x7FF9B596 EQ PUSH2 0x55 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x53 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E SWAP2 SWAP1 PUSH2 0x258 JUMP JUMPDEST PUSH2 0xAB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x294 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x1F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x33A JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x100 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF7 SWAP1 PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B SWAP3 SWAP2 SWAP1 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x45A JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8FAFEBCAF9D154343DAD25669BFA277F4FBACD7AC6B0C4FED522580E040A0F33 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP3 SWAP2 SWAP1 PUSH2 0x487 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x235 DUP2 PUSH2 0x222 JUMP JUMPDEST DUP2 EQ PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x252 DUP2 PUSH2 0x22C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26E JUMPI PUSH2 0x26D PUSH2 0x21D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27C DUP5 DUP3 DUP6 ADD PUSH2 0x243 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28E DUP2 PUSH2 0x222 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x285 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DA DUP3 PUSH2 0x2AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EA DUP2 PUSH2 0x2CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x305 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x345 DUP3 PUSH2 0x222 JUMP JUMPDEST SWAP2 POP PUSH2 0x350 DUP4 PUSH2 0x222 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x35E DUP2 PUSH2 0x222 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x375 JUMPI PUSH2 0x374 PUSH2 0x30B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207061796D656E74000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C3 PUSH1 0x14 DUP4 PUSH2 0x37C JUMP JUMPDEST SWAP2 POP PUSH2 0x3CE DUP3 PUSH2 0x38D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F2 DUP2 PUSH2 0x3B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x40E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2E1 JUMP JUMPDEST PUSH2 0x41B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x285 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x437 DUP2 PUSH2 0x422 JUMP JUMPDEST DUP2 EQ PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x454 DUP2 PUSH2 0x42E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x470 JUMPI PUSH2 0x46F PUSH2 0x21D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x47E DUP5 DUP3 DUP6 ADD PUSH2 0x445 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x49C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x285 JUMP JUMPDEST PUSH2 0x4A9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x285 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0x4D 0xB5 0x2E 0x4C PUSH16 0x67F04033B0235CDF300DFD58CCAB5D76 MOD 0xEC PUSH20 0xA48F139E2F887864736F6C634300081200330000 ",
							"sourceMap": "171:817:1:-:0;;;325:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;392:6;384:5;;:14;;;;;;;;;;;;;;;;;;421:11;408:10;:24;;;;325:114;;171:817;;88:117:2;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:507::-;1284:6;1292;1341:2;1329:9;1320:7;1316:23;1312:32;1309:119;;;1347:79;;:::i;:::-;1309:119;1467:1;1492:64;1548:7;1539:6;1528:9;1524:22;1492:64;:::i;:::-;1482:74;;1438:128;1605:2;1631:64;1687:7;1678:6;1667:9;1663:22;1631:64;:::i;:::-;1621:74;;1576:129;1205:507;;;;;:::o;171:817:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@buyTokens_136": {
									"entryPoint": 171,
									"id": 136,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tokenPrice_84": {
									"entryPoint": 499,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_82": {
									"entryPoint": 505,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1017,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 1159,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 779,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 541,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5098:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:2"
															},
															"nodeType": "YulIf",
															"src": "470:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:2",
														"type": ""
													}
												],
												"src": "417:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:2",
														"type": ""
													}
												],
												"src": "545:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:2"
															},
															"nodeType": "YulIf",
															"src": "766:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:2",
														"type": ""
													}
												],
												"src": "690:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:2",
														"type": ""
													}
												],
												"src": "1025:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:2",
														"type": ""
													}
												],
												"src": "1149:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:2",
														"type": ""
													}
												],
												"src": "1377:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1554:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1564:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1536:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1546:7:2",
														"type": ""
													}
												],
												"src": "1509:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1676:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1686:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1664:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1671:3:2",
														"type": ""
													}
												],
												"src": "1611:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1833:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1843:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1851:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1947:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1932:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1879:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1879:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1879:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1805:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1817:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1828:4:2",
														"type": ""
													}
												],
												"src": "1735:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1991:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2008:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2011:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2001:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2001:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2105:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2108:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2098:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2098:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2098:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2129:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2132:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2122:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2122:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2122:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1963:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2197:362:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2207:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2230:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2212:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2212:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2207:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2241:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2264:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2246:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2246:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2241:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2275:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2298:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2301:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2294:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:9:2"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "2279:11:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2312:41:2",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "2341:11:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2323:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2323:30:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2312:7:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2530:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2532:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2532:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2532:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2463:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2456:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2456:9:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "2486:1:2"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "2493:7:2"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "2502:1:2"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "2489:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2489:15:2"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "2483:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2483:22:2"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2436:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2436:83:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2416:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2416:113:2"
															},
															"nodeType": "YulIf",
															"src": "2413:139:2"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2180:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2183:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2189:7:2",
														"type": ""
													}
												],
												"src": "2149:410:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2661:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2678:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2683:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2671:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2671:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2671:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2699:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2718:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2723:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2714:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2714:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2699:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2633:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2638:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2649:11:2",
														"type": ""
													}
												],
												"src": "2565:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2846:64:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2868:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2876:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2864:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2864:14:2"
																	},
																	{
																		"hexValue": "496e73756666696369656e74207061796d656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2880:22:2",
																		"type": "",
																		"value": "Insufficient payment"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2857:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2857:46:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2857:46:2"
														}
													]
												},
												"name": "store_literal_in_memory_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2838:6:2",
														"type": ""
													}
												],
												"src": "2740:170:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3062:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3072:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3138:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3143:2:2",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3079:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3079:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3072:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3244:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e",
																	"nodeType": "YulIdentifier",
																	"src": "3155:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3155:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3155:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3257:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3268:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3273:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3264:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3264:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3257:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3050:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3058:3:2",
														"type": ""
													}
												],
												"src": "2916:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3459:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3469:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3481:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3492:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3477:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3477:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3469:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3516:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3527:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3512:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3512:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3535:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3541:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3531:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3531:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3505:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3505:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3505:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3561:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3695:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3569:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3561:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3439:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3454:4:2",
														"type": ""
													}
												],
												"src": "3288:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3839:206:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3849:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3861:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3872:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3857:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3857:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3849:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3929:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3942:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3953:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3938:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3938:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3885:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3885:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3885:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4010:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4023:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4034:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4019:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4019:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3966:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3966:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3966:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3803:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3815:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3823:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3834:4:2",
														"type": ""
													}
												],
												"src": "3713:332:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4093:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4103:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4128:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4121:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4121:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4114:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4114:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4103:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4075:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4085:7:2",
														"type": ""
													}
												],
												"src": "4051:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4187:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4241:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4250:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4253:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4243:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4243:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4243:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4210:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4232:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "4217:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4217:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4207:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4207:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4200:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4200:40:2"
															},
															"nodeType": "YulIf",
															"src": "4197:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4180:5:2",
														"type": ""
													}
												],
												"src": "4147:116:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4329:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4339:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4354:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4348:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4348:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4339:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4394:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "4370:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4370:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4370:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4307:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4315:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4323:5:2",
														"type": ""
													}
												],
												"src": "4269:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4486:271:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4532:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4534:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4534:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4534:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4507:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4516:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4503:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4503:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4528:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4499:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4499:32:2"
															},
															"nodeType": "YulIf",
															"src": "4496:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "4625:125:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4640:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4654:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4644:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4669:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4712:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4723:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4708:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4708:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4732:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4679:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4679:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4669:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4456:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4467:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4479:6:2",
														"type": ""
													}
												],
												"src": "4412:345:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4889:206:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4899:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4911:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4922:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4907:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4907:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4899:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4979:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4992:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5003:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4988:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4988:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4935:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4935:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4935:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5060:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5073:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5084:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5069:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5069:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5016:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5016:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5016:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4853:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4865:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4873:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4884:4:2",
														"type": ""
													}
												],
												"src": "4763:332:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient payment\")\n\n    }\n\n    function abi_encode_t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100345760003560e01c80633610724e146100395780637ff9b59614610055578063fc0c546a14610080575b600080fd5b610053600480360381019061004e9190610258565b6100ab565b005b34801561006157600080fd5b5061006a6101f3565b6040516100779190610294565b60405180910390f35b34801561008c57600080fd5b506100956101f9565b6040516100a291906102f0565b60405180910390f35b6000600154826100bb919061033a565b905080341015610100576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f7906103d9565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161015b9291906103f9565b6020604051808303816000875af115801561017a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019e919061045a565b503373ffffffffffffffffffffffffffffffffffffffff167f8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f3383836040516101e7929190610487565b60405180910390a25050565b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b6000819050919050565b61023581610222565b811461024057600080fd5b50565b6000813590506102528161022c565b92915050565b60006020828403121561026e5761026d61021d565b5b600061027c84828501610243565b91505092915050565b61028e81610222565b82525050565b60006020820190506102a96000830184610285565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102da826102af565b9050919050565b6102ea816102cf565b82525050565b600060208201905061030560008301846102e1565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061034582610222565b915061035083610222565b925082820261035e81610222565b915082820484148315176103755761037461030b565b5b5092915050565b600082825260208201905092915050565b7f496e73756666696369656e74207061796d656e74000000000000000000000000600082015250565b60006103c360148361037c565b91506103ce8261038d565b602082019050919050565b600060208201905081810360008301526103f2816103b6565b9050919050565b600060408201905061040e60008301856102e1565b61041b6020830184610285565b9392505050565b60008115159050919050565b61043781610422565b811461044257600080fd5b50565b6000815190506104548161042e565b92915050565b6000602082840312156104705761046f61021d565b5b600061047e84828501610445565b91505092915050565b600060408201905061049c6000830185610285565b6104a96020830184610285565b939250505056fea26469706673582212203b4db52e4c6f67f04033b0235cdf300dfd58ccab5d7606ec73a48f139e2f887864736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3610724E EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x7FF9B596 EQ PUSH2 0x55 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x53 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E SWAP2 SWAP1 PUSH2 0x258 JUMP JUMPDEST PUSH2 0xAB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x294 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x1F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x33A JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x100 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF7 SWAP1 PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B SWAP3 SWAP2 SWAP1 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x45A JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8FAFEBCAF9D154343DAD25669BFA277F4FBACD7AC6B0C4FED522580E040A0F33 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP3 SWAP2 SWAP1 PUSH2 0x487 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x235 DUP2 PUSH2 0x222 JUMP JUMPDEST DUP2 EQ PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x252 DUP2 PUSH2 0x22C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26E JUMPI PUSH2 0x26D PUSH2 0x21D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27C DUP5 DUP3 DUP6 ADD PUSH2 0x243 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28E DUP2 PUSH2 0x222 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x285 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DA DUP3 PUSH2 0x2AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EA DUP2 PUSH2 0x2CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x305 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x345 DUP3 PUSH2 0x222 JUMP JUMPDEST SWAP2 POP PUSH2 0x350 DUP4 PUSH2 0x222 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x35E DUP2 PUSH2 0x222 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x375 JUMPI PUSH2 0x374 PUSH2 0x30B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207061796D656E74000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C3 PUSH1 0x14 DUP4 PUSH2 0x37C JUMP JUMPDEST SWAP2 POP PUSH2 0x3CE DUP3 PUSH2 0x38D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F2 DUP2 PUSH2 0x3B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x40E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2E1 JUMP JUMPDEST PUSH2 0x41B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x285 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x437 DUP2 PUSH2 0x422 JUMP JUMPDEST DUP2 EQ PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x454 DUP2 PUSH2 0x42E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x470 JUMPI PUSH2 0x46F PUSH2 0x21D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x47E DUP5 DUP3 DUP6 ADD PUSH2 0x445 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x49C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x285 JUMP JUMPDEST PUSH2 0x4A9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x285 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0x4D 0xB5 0x2E 0x4C PUSH16 0x67F04033B0235CDF300DFD58CCAB5D76 MOD 0xEC PUSH20 0xA48F139E2F887864736F6C634300081200330000 ",
							"sourceMap": "171:817:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;445:454;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;266:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;196:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;445:454;508:18;539:10;;529:7;:20;;;;:::i;:::-;508:41;;580:10;567:9;:23;;559:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;680:5;;;;;;;;;;673:22;;;696:10;708:7;673:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;860:10;844:48;;;872:7;881:10;844:48;;;;;;;:::i;:::-;;;;;;;;498:401;445:454;:::o;266:25::-;;;;:::o;196:20::-;;;;;;;;;;;;:::o;88:117:2:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:180::-;2011:77;2008:1;2001:88;2108:4;2105:1;2098:15;2132:4;2129:1;2122:15;2149:410;2189:7;2212:20;2230:1;2212:20;:::i;:::-;2207:25;;2246:20;2264:1;2246:20;:::i;:::-;2241:25;;2301:1;2298;2294:9;2323:30;2341:11;2323:30;:::i;:::-;2312:41;;2502:1;2493:7;2489:15;2486:1;2483:22;2463:1;2456:9;2436:83;2413:139;;2532:18;;:::i;:::-;2413:139;2197:362;2149:410;;;;:::o;2565:169::-;2649:11;2683:6;2678:3;2671:19;2723:4;2718:3;2714:14;2699:29;;2565:169;;;;:::o;2740:170::-;2880:22;2876:1;2868:6;2864:14;2857:46;2740:170;:::o;2916:366::-;3058:3;3079:67;3143:2;3138:3;3079:67;:::i;:::-;3072:74;;3155:93;3244:3;3155:93;:::i;:::-;3273:2;3268:3;3264:12;3257:19;;2916:366;;;:::o;3288:419::-;3454:4;3492:2;3481:9;3477:18;3469:26;;3541:9;3535:4;3531:20;3527:1;3516:9;3512:17;3505:47;3569:131;3695:4;3569:131;:::i;:::-;3561:139;;3288:419;;;:::o;3713:332::-;3834:4;3872:2;3861:9;3857:18;3849:26;;3885:71;3953:1;3942:9;3938:17;3929:6;3885:71;:::i;:::-;3966:72;4034:2;4023:9;4019:18;4010:6;3966:72;:::i;:::-;3713:332;;;;;:::o;4051:90::-;4085:7;4128:5;4121:13;4114:21;4103:32;;4051:90;;;:::o;4147:116::-;4217:21;4232:5;4217:21;:::i;:::-;4210:5;4207:32;4197:60;;4253:1;4250;4243:12;4197:60;4147:116;:::o;4269:137::-;4323:5;4354:6;4348:13;4339:22;;4370:30;4394:5;4370:30;:::i;:::-;4269:137;;;;:::o;4412:345::-;4479:6;4528:2;4516:9;4507:7;4503:23;4499:32;4496:119;;;4534:79;;:::i;:::-;4496:119;4654:1;4679:61;4732:7;4723:6;4712:9;4708:22;4679:61;:::i;:::-;4669:71;;4625:125;4412:345;;;;:::o;4763:332::-;4884:4;4922:2;4911:9;4907:18;4899:26;;4935:71;5003:1;4992:9;4988:17;4979:6;4935:71;:::i;:::-;5016:72;5084:2;5073:9;5069:18;5060:6;5016:72;:::i;:::-;4763:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "250800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyTokens(uint256)": "infinite",
								"token()": "2533",
								"tokenPrice()": "2429"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 171,
									"end": 988,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 171,
									"end": 988,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 171,
									"end": 988,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 325,
									"end": 439,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 325,
									"end": 439,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 325,
									"end": 439,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 325,
									"end": 439,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 325,
									"end": 439,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 325,
									"end": 439,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 325,
									"end": 439,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 325,
									"end": 439,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 392,
									"end": 398,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 384,
									"end": 389,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 389,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 384,
									"end": 398,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 384,
									"end": 398,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 384,
									"end": 398,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 384,
									"end": 398,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 421,
									"end": 432,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 408,
									"end": 418,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 408,
									"end": 432,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 408,
									"end": 432,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 408,
									"end": 432,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 408,
									"end": 432,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 325,
									"end": 439,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 171,
									"end": 988,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 171,
									"end": 988,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1284,
									"end": 1290,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1292,
									"end": 1298,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1329,
									"end": 1338,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1320,
									"end": 1327,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1316,
									"end": 1339,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1312,
									"end": 1344,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1347,
									"end": 1426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1467,
									"end": 1468,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 1548,
									"end": 1555,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1539,
									"end": 1545,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1528,
									"end": 1537,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1524,
									"end": 1546,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1492,
									"end": 1556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1438,
									"end": 1566,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1605,
									"end": 1607,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 1687,
									"end": 1694,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1676,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1663,
									"end": 1685,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1631,
									"end": 1695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1576,
									"end": 1705,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1205,
									"end": 1712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 171,
									"end": 988,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 171,
									"end": 988,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 171,
									"end": 988,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 171,
									"end": 988,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 988,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 171,
									"end": 988,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 988,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 171,
									"end": 988,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 988,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203b4db52e4c6f67f04033b0235cdf300dfd58ccab5d7606ec73a48f139e2f887864736f6c63430008120033",
									".code": [
										{
											"begin": 171,
											"end": 988,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 171,
											"end": 988,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 171,
											"end": 988,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 171,
											"end": 988,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 171,
											"end": 988,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 171,
											"end": 988,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 171,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 171,
											"end": 988,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 171,
											"end": 988,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 171,
											"end": 988,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 171,
											"end": 988,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 171,
											"end": 988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 171,
											"end": 988,
											"name": "PUSH",
											"source": 1,
											"value": "3610724E"
										},
										{
											"begin": 171,
											"end": 988,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 171,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 171,
											"end": 988,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 171,
											"end": 988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 171,
											"end": 988,
											"name": "PUSH",
											"source": 1,
											"value": "7FF9B596"
										},
										{
											"begin": 171,
											"end": 988,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 171,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 171,
											"end": 988,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 171,
											"end": 988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 171,
											"end": 988,
											"name": "PUSH",
											"source": 1,
											"value": "FC0C546A"
										},
										{
											"begin": 171,
											"end": 988,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 171,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 171,
											"end": 988,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 171,
											"end": 988,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 171,
											"end": 988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 171,
											"end": 988,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 171,
											"end": 988,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 445,
											"end": 899,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 445,
											"end": 899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 445,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 445,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 445,
											"end": 899,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 899,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 445,
											"end": 899,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 445,
											"end": 899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 445,
											"end": 899,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 445,
											"end": 899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 899,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 445,
											"end": 899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 445,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 445,
											"end": 899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 899,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 445,
											"end": 899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 445,
											"end": 899,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 266,
											"end": 291,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 266,
											"end": 291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 266,
											"end": 291,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 266,
											"end": 291,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 266,
											"end": 291,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 266,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 266,
											"end": 291,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 291,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 266,
											"end": 291,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 266,
											"end": 291,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 266,
											"end": 291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 266,
											"end": 291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 266,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 266,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 266,
											"end": 291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 266,
											"end": 291,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 266,
											"end": 291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 266,
											"end": 291,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 291,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 266,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 266,
											"end": 291,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 266,
											"end": 291,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 266,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 266,
											"end": 291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 266,
											"end": 291,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 266,
											"end": 291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 266,
											"end": 291,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 291,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 266,
											"end": 291,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 266,
											"end": 291,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 266,
											"end": 291,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 266,
											"end": 291,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 266,
											"end": 291,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 196,
											"end": 216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 196,
											"end": 216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 445,
											"end": 899,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 445,
											"end": 899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 508,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 549,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 539,
											"end": 549,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 529,
											"end": 536,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 529,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 549,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 529,
											"end": 549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 529,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 529,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 529,
											"end": 549,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 508,
											"end": 549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 508,
											"end": 549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 580,
											"end": 590,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 567,
											"end": 576,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 567,
											"end": 590,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 567,
											"end": 590,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 559,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 559,
											"end": 615,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 559,
											"end": 615,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 615,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 559,
											"end": 615,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 559,
											"end": 615,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 559,
											"end": 615,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 559,
											"end": 615,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 559,
											"end": 615,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 559,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 559,
											"end": 615,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 559,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 559,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 559,
											"end": 615,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 559,
											"end": 615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 559,
											"end": 615,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 615,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 559,
											"end": 615,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 559,
											"end": 615,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 559,
											"end": 615,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 559,
											"end": 615,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 559,
											"end": 615,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 559,
											"end": 615,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 559,
											"end": 615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 680,
											"end": 685,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 685,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 680,
											"end": 685,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 680,
											"end": 685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 680,
											"end": 685,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 680,
											"end": 685,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 680,
											"end": 685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 680,
											"end": 685,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 680,
											"end": 685,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 680,
											"end": 685,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 673,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 673,
											"end": 695,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 673,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 696,
											"end": 706,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 708,
											"end": 715,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 673,
											"end": 716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 673,
											"end": 716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 673,
											"end": 716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 673,
											"end": 716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 860,
											"end": 870,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 844,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 844,
											"end": 892,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 844,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "8FAFEBCAF9D154343DAD25669BFA277F4FBACD7AC6B0C4FED522580E040A0F33"
										},
										{
											"begin": 872,
											"end": 879,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 881,
											"end": 891,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 844,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 844,
											"end": 892,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 844,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 844,
											"end": 892,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 844,
											"end": 892,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 844,
											"end": 892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 844,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 844,
											"end": 892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 844,
											"end": 892,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 844,
											"end": 892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 844,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 844,
											"end": 892,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 844,
											"end": 892,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 844,
											"end": 892,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 844,
											"end": 892,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 844,
											"end": 892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 844,
											"end": 892,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 498,
											"end": 899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 266,
											"end": 291,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 266,
											"end": 291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 266,
											"end": 291,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 266,
											"end": 291,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 266,
											"end": 291,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 266,
											"end": 291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 196,
											"end": 216,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 196,
											"end": 216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1949,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1879,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1735,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2143,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1963,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2088,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2008,
											"end": 2009,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2001,
											"end": 2089,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2112,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2105,
											"end": 2106,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2132,
											"end": 2136,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2129,
											"end": 2130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2559,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2149,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2196,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2230,
											"end": 2231,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2212,
											"end": 2232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2232,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2212,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2232,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2232,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2264,
											"end": 2265,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2246,
											"end": 2266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2266,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2246,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2302,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2299,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2294,
											"end": 2303,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2341,
											"end": 2352,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2323,
											"end": 2353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2353,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2323,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2353,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2353,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2502,
											"end": 2503,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2500,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2489,
											"end": 2504,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2486,
											"end": 2487,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2505,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2463,
											"end": 2464,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2465,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2436,
											"end": 2519,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2413,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2413,
											"end": 2552,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2532,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2532,
											"end": 2550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2550,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2532,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2413,
											"end": 2552,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2413,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2197,
											"end": 2559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2559,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2559,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2734,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2565,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2683,
											"end": 2689,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 2681,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2690,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2723,
											"end": 2727,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2718,
											"end": 2721,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2699,
											"end": 2728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2699,
											"end": 2728,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2734,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2734,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2734,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2734,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2910,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2740,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2902,
											"name": "PUSH",
											"source": 2,
											"value": "496E73756666696369656E74207061796D656E74000000000000000000000000"
										},
										{
											"begin": 2876,
											"end": 2877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2868,
											"end": 2874,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2864,
											"end": 2878,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2857,
											"end": 2903,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3282,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2916,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3058,
											"end": 3061,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3143,
											"end": 3145,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3138,
											"end": 3141,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3079,
											"end": 3146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3146,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3079,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3072,
											"end": 3146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3072,
											"end": 3146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3244,
											"end": 3247,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3155,
											"end": 3248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3248,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3155,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3275,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3268,
											"end": 3271,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3264,
											"end": 3276,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3257,
											"end": 3276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3257,
											"end": 3276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3282,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3282,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3288,
											"end": 3707,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3288,
											"end": 3707,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3454,
											"end": 3458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3492,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3481,
											"end": 3490,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3495,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3469,
											"end": 3495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3469,
											"end": 3495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3541,
											"end": 3550,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3535,
											"end": 3539,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3531,
											"end": 3551,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3527,
											"end": 3528,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3516,
											"end": 3525,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3529,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3505,
											"end": 3552,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3695,
											"end": 3699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3569,
											"end": 3700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3700,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3569,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3700,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3288,
											"end": 3707,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3288,
											"end": 3707,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3288,
											"end": 3707,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3288,
											"end": 3707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 4045,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3713,
											"end": 4045,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3834,
											"end": 3838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 3874,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3861,
											"end": 3870,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3857,
											"end": 3875,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3875,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3875,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3885,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3953,
											"end": 3954,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 3951,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3938,
											"end": 3955,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3929,
											"end": 3935,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3885,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3885,
											"end": 3956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3885,
											"end": 3956,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3885,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3966,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4034,
											"end": 4036,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4023,
											"end": 4032,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4019,
											"end": 4037,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4010,
											"end": 4016,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3966,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3966,
											"end": 4038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3966,
											"end": 4038,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3966,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 4045,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 4045,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 4045,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 4045,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 4045,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 4045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4051,
											"end": 4141,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4051,
											"end": 4141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4085,
											"end": 4092,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4133,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4121,
											"end": 4134,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4114,
											"end": 4135,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4135,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4051,
											"end": 4141,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4051,
											"end": 4141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4051,
											"end": 4141,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4051,
											"end": 4141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4263,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4147,
											"end": 4263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4217,
											"end": 4238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4232,
											"end": 4237,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4217,
											"end": 4238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4217,
											"end": 4238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4217,
											"end": 4238,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4217,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4210,
											"end": 4215,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4207,
											"end": 4239,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4197,
											"end": 4257,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4253,
											"end": 4254,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4251,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4243,
											"end": 4255,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4257,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4197,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4263,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4406,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4269,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4328,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4354,
											"end": 4360,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4348,
											"end": 4361,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4339,
											"end": 4361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4339,
											"end": 4361,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4370,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4394,
											"end": 4399,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4370,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4370,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4370,
											"end": 4400,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4370,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4406,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4406,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4406,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4406,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4412,
											"end": 4757,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4412,
											"end": 4757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4479,
											"end": 4485,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4530,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4516,
											"end": 4525,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4507,
											"end": 4514,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4503,
											"end": 4526,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4499,
											"end": 4531,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 4496,
											"end": 4615,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4496,
											"end": 4615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4496,
											"end": 4615,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4534,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4534,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4534,
											"end": 4613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4534,
											"end": 4613,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4534,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4496,
											"end": 4615,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4496,
											"end": 4615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4655,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4679,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4732,
											"end": 4739,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4723,
											"end": 4729,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4712,
											"end": 4721,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4730,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4679,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4679,
											"end": 4740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4679,
											"end": 4740,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4679,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4669,
											"end": 4740,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4669,
											"end": 4740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4625,
											"end": 4750,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4412,
											"end": 4757,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4412,
											"end": 4757,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4412,
											"end": 4757,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4412,
											"end": 4757,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4412,
											"end": 4757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4763,
											"end": 5095,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4763,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4884,
											"end": 4888,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4922,
											"end": 4924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4911,
											"end": 4920,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4907,
											"end": 4925,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4899,
											"end": 4925,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4899,
											"end": 4925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4935,
											"end": 5006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5003,
											"end": 5004,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4992,
											"end": 5001,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4988,
											"end": 5005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4979,
											"end": 4985,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4935,
											"end": 5006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4935,
											"end": 5006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4935,
											"end": 5006,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4935,
											"end": 5006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5016,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5084,
											"end": 5086,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5073,
											"end": 5082,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5069,
											"end": 5087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5060,
											"end": 5066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5016,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5016,
											"end": 5088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5016,
											"end": 5088,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5016,
											"end": 5088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4763,
											"end": 5095,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4763,
											"end": 5095,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4763,
											"end": 5095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4763,
											"end": 5095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4763,
											"end": 5095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4763,
											"end": 5095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"contracts/1_TokenSale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyTokens(uint256)": "3610724e",
							"token()": "fc0c546a",
							"tokenPrice()": "7ff9b596"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalPrice\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/1_TokenSale.sol\":\"TokenSale\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"contracts/1_TokenSale.sol\":{\"keccak256\":\"0x2c85baf92163e8c34f8542f272be016bfb45ded36e7359a4da8b3333de8e3397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97b36c1dcf06455ec40fc29a724735d7537aa34b75e746c59bcd330954f354c1\",\"dweb:/ipfs/QmW7WbQqqAynVgQn3FsV1owPXiZL7KpYpy5JBdUUGdjJVw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 82,
								"contract": "contracts/1_TokenSale.sol:TokenSale",
								"label": "token",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 84,
								"contract": "contracts/1_TokenSale.sol:TokenSale",
								"label": "tokenPrice",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2668:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2682:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2694:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2728:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:0"
									},
									"scope": 77,
									"src": "2646:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2534:0",
							"usedErrors": []
						}
					],
					"src": "106:2631:0"
				},
				"id": 0
			},
			"contracts/1_TokenSale.sol": {
				"ast": {
					"absolutePath": "contracts/1_TokenSale.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"TokenSale": [
							145
						]
					},
					"id": 146,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 146,
							"sourceUnit": 78,
							"src": "56:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TokenSale",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 145,
							"linearizedBaseContracts": [
								145
							],
							"name": "TokenSale",
							"nameLocation": "180:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 82,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "211:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 145,
									"src": "196:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 81,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "196:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7ff9b596",
									"id": 84,
									"mutability": "mutable",
									"name": "tokenPrice",
									"nameLocation": "281:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 145,
									"src": "266:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 83,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "266:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "374:65:1",
										"statements": [
											{
												"expression": {
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 91,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "384:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 92,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "392:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "384:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "384:14:1"
											},
											{
												"expression": {
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 95,
														"name": "tokenPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "408:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 96,
														"name": "_tokenPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "421:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "408:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "408:24:1"
											}
										]
									},
									"id": 100,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "345:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "337:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "337:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "_tokenPrice",
												"nameLocation": "361:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "353:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "353:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:37:1"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "374:0:1"
									},
									"scope": 145,
									"src": "325:114:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "498:401:1",
										"statements": [
											{
												"assignments": [
													106
												],
												"declarations": [
													{
														"constant": false,
														"id": 106,
														"mutability": "mutable",
														"name": "totalPrice",
														"nameLocation": "516:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 135,
														"src": "508:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 105,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "508:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 110,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 107,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "529:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 108,
														"name": "tokenPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "539:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "529:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "508:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 112,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "567:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "571:5:1",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "567:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 114,
																"name": "totalPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "580:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "567:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207061796d656e74",
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "592:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e",
																"typeString": "literal_string \"Insufficient payment\""
															},
															"value": "Insufficient payment"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e",
																"typeString": "literal_string \"Insufficient payment\""
															}
														],
														"id": 111,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "559:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "559:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "559:56:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 123,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "696:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "700:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "696:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 125,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "708:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 120,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 82,
																	"src": "680:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 119,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "673:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "673:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "687:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "673:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "673:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "673:43:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 129,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "860:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "864:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "860:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 131,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "872:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 132,
															"name": "totalPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "881:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 128,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 144,
														"src": "844:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "844:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "EmitStatement",
												"src": "839:53:1"
											}
										]
									},
									"functionSelector": "3610724e",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyTokens",
									"nameLocation": "454:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "472:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "464:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "464:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:17:1"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "498:0:1"
									},
									"scope": 145,
									"src": "445:454:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33",
									"id": 144,
									"name": "TokensPurchased",
									"nameLocation": "911:15:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "943:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "927:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "927:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "958:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "950:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "950:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalPrice",
												"nameLocation": "974:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "966:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "966:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "926:59:1"
									},
									"src": "905:81:1"
								}
							],
							"scope": 146,
							"src": "171:817:1",
							"usedErrors": []
						}
					],
					"src": "32:956:1"
				},
				"id": 1
			}
		}
	}
}